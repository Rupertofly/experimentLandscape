{"version":3,"sources":["webpack:///bundle.3c6fc40110d634eaf1e5.js","webpack:///./src/sketch/main.js","webpack:///./src/index.js","webpack:///./src/sketch/pallete.js"],"names":["webpackJsonp","174","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","preload","setup","createCanvas","window","innerWidth","innerHeight","canvasExtent","min","width","height","perLineCount","floor","pointCount","pow","console","log","_","range","map","index","y","x","random","gap","siteData","i","c","_pallete2","hex","neighbours","posAsArray","this","sites","push","resetFunc","func","thisArr","length","d","links","link","source","target","vorFunction","_d","voronoi","size","site","vorDiagram","draw","background","fill","strokeWeight","pGons","polygons","poly","stroke","visited","frontier","cameFrom","Array","first","find","data","crackFunc","visitArray","frontierArray","node","splice","n","includes","strokeC","lerpColor","color","toString","journeyToHere","lineCalc","pre","lineArr","pathArr","next","indexOf","noFill","beginShape","pt","_bSpline2","curveVertex","endShape","polygonCentroid","filter","BLUR","Object","defineProperty","value","_lodash","_lodash2","_bSpline","_pallete","511","_main","sketchHooks","newObj","key","prototype","hasOwnProperty","call","w","keys","forEach","hook","512","getC","arg1","arg2","hue","shad","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","PalleteArray","Symbol","iterator","done","v","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","name","err","return","Error","hues","shades","error","red","alpha","blue","green"],"mappings":"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","file":"bundle.3c6fc40110d634eaf1e5.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 174:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n'use-strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.preload = preload;\nexports.setup = setup;\nexports.draw = draw;\n\nvar _d = __webpack_require__(507);\n\nvar _lodash = __webpack_require__(508);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _bSpline = __webpack_require__(175);\n\nvar _bSpline2 = _interopRequireDefault(_bSpline);\n\nvar _pallete = __webpack_require__(512);\n\nvar _pallete2 = _interopRequireDefault(_pallete);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sites = [];\nvar canvasExtent = void 0;\nvar vorFunction = void 0;\nvar vorDiagram = void 0;\n\n/** @type {vorManagement} */\nfunction preload() {}\nfunction setup() {\n  createCanvas(window.innerWidth, window.innerHeight);\n  canvasExtent = min(width, height);\n  var perLineCount = floor(canvasExtent / 30);\n  var pointCount = pow(perLineCount, 2);\n  console.log('per line count: ' + perLineCount);\n  _lodash2.default.range(pointCount).map(function (index) {\n    var y = floor(index / perLineCount) * 30;\n    var x = index % perLineCount * 30;\n    y = 30 + y + _lodash2.default.random(-30, 30);\n    x = 30 + x + _lodash2.default.random(-30, 30);\n    var gap = canvasExtent / 8;\n    y = map(y, 0, canvasExtent, gap * 7, canvasExtent - gap * 7);\n    x = map(x, 0, canvasExtent, gap * 7, canvasExtent - gap * 7);\n\n    var siteData = {\n      i: index,\n      x: x,\n      y: y,\n      c: (0, _pallete2.default)(_lodash2.default.random(3, 14), _lodash2.default.random(4, 5)).hex,\n      neighbours: [],\n      posAsArray: function posAsArray() {\n        return [this.x, this.y];\n      }\n    };\n    sites.push(siteData);\n  });\n  sites.resetFunc = function (func, thisArr) {\n    for (var i = 0; i < thisArr.length; i++) {\n      thisArr[i].neighbours.length = 0;\n    }\n    var d = func(thisArr);\n\n    d.links().map(function (link) {\n      link.source.neighbours.push(link.target);\n      link.target.neighbours.push(link.source);\n    });\n    return d;\n  };\n  vorFunction = (0, _d.voronoi)().size([canvasExtent, canvasExtent]).x(function (site) {\n    return site.x;\n  }).y(function (site) {\n    return site.y;\n  });\n  vorDiagram = sites.resetFunc(vorFunction, sites);\n}\nfunction draw() {\n  background(255, 30);\n  // translate( -( canvasExtent / 2 ), -( canvasExtent / 2 ) );\n  fill(200, 100, 100);\n  strokeWeight(2);\n  var pGons = vorDiagram.polygons();\n  pGons.map(function (poly) {\n    // beginShape();\n    // fill( poly.data.c );\n    // poly.map( point => vertex( point[0], point[1] ) );\n    // endShape( CLOSE );\n  });\n  strokeWeight(3);\n  stroke((0, _pallete2.default)(2, 2).hex);\n  var visited = [];\n  var frontier = [];\n  var cameFrom = new Array(sites.length).fill(null);\n  var splines = [];\n  var first = vorDiagram.find(canvasExtent / 2, canvasExtent / 2);\n  var crackFunc = function crackFunc(visitArray, frontierArray) {\n    if (frontierArray.length === 0) return;\n\n    var node = frontierArray.splice(0, 1)[0];\n    node.neighbours.map(function (n) {\n      if (!visited.includes(n)) {\n        var strokeC = lerpColor(color(255, 0, 0), color(255), visitArray.length / sites.length).toString('#rrggbb');\n        node.c = strokeC;\n        // line( node.x, node.y, n.x, n.y );\n        frontierArray.push(n);\n        visited.push(n);\n        cameFrom[n.i] = node;\n      }\n    });\n    crackFunc(visitArray, frontierArray);\n  };\n  frontier.push(first.data);\n  visited.push(first.data);\n  crackFunc(visited, frontier);\n  sites.map(function (n) {\n    var journeyToHere = [];\n    journeyToHere.push(n.posAsArray(n));\n    journeyToHere.push(n.posAsArray(n));\n    journeyToHere.push(n.posAsArray(n));\n    journeyToHere.push(n.posAsArray(n));\n    var lineCalc = function lineCalc(pre, lineArr, pathArr) {\n      if (pre === null) return;\n      if (pathArr[pre.i] === null) {\n        lineArr.push(pre.posAsArray(n));\n      } else {\n        lineArr.push(pre.posAsArray(n));\n        var next = pathArr[pre.i];\n        var thisI = pathArr.indexOf(pre);\n        // pathArr[thisI] = null;\n        lineCalc(next, lineArr, pathArr);\n      }\n    };\n    lineCalc(cameFrom[n.i], journeyToHere, cameFrom);\n    journeyToHere.push(journeyToHere[journeyToHere.length - 1]);\n    noFill();\n    beginShape();\n    for (var i = 0; i < 1; i += 0.001) {\n      var pt = (0, _bSpline2.default)(i, 4, journeyToHere);\n      curveVertex(pt[0], pt[1]);\n    }\n    endShape();\n  });\n\n  pGons.map(function (poly) {\n    var c = (0, _d.polygonCentroid)(poly);\n    poly.data.x = c[0];\n    poly.data.y = c[1];\n  });\n\n  vorDiagram = sites.resetFunc(vorFunction, sites);\n  filter(BLUR, 1);\n}\n\n/***/ }),\n\n/***/ 511:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _main = __webpack_require__(174);\n\nvar sketchHooks = _interopRequireWildcard(_main);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n(function (w) {\n  return Object.keys(sketchHooks).forEach(function (hook) {\n    w[hook] = sketchHooks[hook];\n  });\n})(window);\n\n/***/ }),\n\n/***/ 512:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getC;\nvar hues = exports.hues = undefined;\n(function (hues) {\n  hues[hues['cools'] = 0] = 'cools';\n  hues[hues['warms'] = 1] = 'warms';\n  hues[hues['neutrals'] = 2] = 'neutrals';\n  hues[hues['pinks'] = 3] = 'pinks';\n  hues[hues['purples'] = 4] = 'purples';\n  hues[hues['violets'] = 5] = 'violets';\n  hues[hues['blues'] = 6] = 'blues';\n  hues[hues['aquas'] = 7] = 'aquas';\n  hues[hues['greens'] = 8] = 'greens';\n  hues[hues['limes'] = 9] = 'limes';\n  hues[hues['yellows'] = 10] = 'yellows';\n  hues[hues['browns'] = 11] = 'browns';\n  hues[hues['oranges'] = 12] = 'oranges';\n  hues[hues['apricots'] = 13] = 'apricots';\n  hues[hues['reds'] = 14] = 'reds';\n})(hues || (exports.hues = hues = {}));\nvar shades = exports.shades = undefined;\n(function (shades) {\n  shades[shades['black'] = 0] = 'black';\n  shades[shades['dark'] = 1] = 'dark';\n  shades[shades['mediumDark'] = 2] = 'mediumDark';\n  shades[shades['medium'] = 3] = 'medium';\n  shades[shades['mediumLight'] = 4] = 'mediumLight';\n  shades[shades['light'] = 5] = 'light';\n  shades[shades['white'] = 6] = 'white';\n})(shades || (exports.shades = shades = {}));\nvar PalleteArray = [[{\n  red: 0.2117647,\n  alpha: 1,\n  name: 'BigStone',\n  blue: 0.2745098,\n  green: 0.254902,\n  hex: '#364146'\n}, {\n  red: 0.2666667,\n  alpha: 1,\n  name: 'RiverBed',\n  blue: 0.3372549,\n  green: 0.3137255,\n  hex: '#445056'\n}, {\n  red: 0.4666667,\n  alpha: 1,\n  name: 'RegentGray',\n  blue: 0.5333334,\n  green: 0.5137255,\n  hex: '#778388'\n}, {\n  red: 0.6627451,\n  alpha: 1,\n  name: 'Casper',\n  blue: 0.7294118,\n  green: 0.7098039,\n  hex: '#a9b5ba'\n}, {\n  red: 0.07058824,\n  alpha: 1,\n  name: 'Mirage',\n  blue: 0.1372549,\n  green: 0.1176471,\n  hex: '#121e23'\n}, {\n  red: 0.8588235,\n  alpha: 1,\n  name: 'Tranquil',\n  blue: 0.9254902,\n  green: 0.9058824,\n  hex: '#dbe7ec'\n}, {\n  red: 0.8980392,\n  alpha: 1,\n  name: 'AquaSqueeze',\n  blue: 0.9647059,\n  green: 0.945098,\n  hex: '#e5f1f6'\n}], [{\n  red: 0.1529412,\n  alpha: 1,\n  name: 'Oil',\n  blue: 0.08235294,\n  green: 0.1176471,\n  hex: '#271e15'\n}, {\n  red: 0.2941177,\n  alpha: 1,\n  name: 'SpaceShuttle',\n  blue: 0.2235294,\n  green: 0.2627451,\n  hex: '#4b4339'\n}, {\n  red: 0.34902,\n  alpha: 1,\n  name: 'Masala',\n  blue: 0.28235,\n  green: 0.31765,\n  hex: '#595148'\n}, {\n  red: 0.5490196,\n  alpha: 1,\n  name: 'Schooner',\n  blue: 0.4745098,\n  green: 0.5137255,\n  hex: '#8c8379'\n}, {\n  red: 0.7450981,\n  alpha: 1,\n  name: 'Tide',\n  blue: 0.6745098,\n  green: 0.7098039,\n  hex: '#beb5ac'\n}, {\n  red: 0.9411765,\n  alpha: 1,\n  name: 'DesertStorm',\n  blue: 0.8705882,\n  green: 0.9098039,\n  hex: '#f0e8de'\n}, {\n  red: 0.9803922,\n  alpha: 1,\n  name: 'WhiteLinen',\n  blue: 0.9098039,\n  green: 0.9490196,\n  hex: '#faf2e8'\n}], [{\n  red: 0.05882353,\n  alpha: 1,\n  name: 'Onyx',\n  blue: 0.05882353,\n  green: 0.05882353,\n  hex: '#0f0f0f'\n}, {\n  red: 0.2156863,\n  alpha: 1,\n  name: 'Tuatara',\n  blue: 0.2156863,\n  green: 0.2156863,\n  hex: '#373737'\n}, {\n  red: 0.2784314,\n  alpha: 1,\n  name: 'Charcoal',\n  blue: 0.2784314,\n  green: 0.2784314,\n  hex: '#474747'\n}, {\n  red: 0.4980392,\n  alpha: 1,\n  name: 'Tin',\n  blue: 0.4980392,\n  green: 0.4980392,\n  hex: '#7f7f7f'\n}, {\n  red: 0.7176471,\n  alpha: 1,\n  name: 'Loblolly',\n  blue: 0.7176471,\n  green: 0.7176471,\n  hex: '#b7b7b7'\n}, {\n  red: 0.9372549,\n  alpha: 1,\n  name: 'Gallery',\n  blue: 0.9372549,\n  green: 0.9372549,\n  hex: '#efefef'\n}, {\n  red: 0.9803922,\n  alpha: 1,\n  name: 'Alabaster',\n  blue: 0.9803922,\n  green: 0.9803922,\n  hex: '#fafafa'\n}], [{\n  red: 0.6313726,\n  alpha: 1,\n  name: 'RoyalHeath',\n  blue: 0.5058824,\n  green: 0.1960784,\n  hex: '#a13281'\n}, {\n  red: 0.7450981,\n  alpha: 1,\n  name: 'Byzantine',\n  blue: 0.6039216,\n  green: 0.227451,\n  hex: '#be3a9a'\n}, {\n  red: 0.827451,\n  alpha: 1,\n  name: 'DeepFuchsia',\n  blue: 0.6862745,\n  green: 0.3098039,\n  hex: '#d34faf'\n}, {\n  red: 0.9333333,\n  alpha: 1,\n  name: 'NeonFuchsia',\n  blue: 0.7568628,\n  green: 0.2862745,\n  hex: '#ee49c1'\n}, {\n  red: 0.945098,\n  alpha: 1,\n  name: 'RosePink',\n  blue: 0.8039216,\n  green: 0.427451,\n  hex: '#f16dcd'\n}, {\n  red: 0.972549,\n  alpha: 1,\n  name: 'Chantilly',\n  blue: 0.9019608,\n  green: 0.7137255,\n  hex: '#f8b6e6'\n}, {\n  red: 0.9882353,\n  alpha: 1,\n  name: 'PaleRose',\n  blue: 0.9607843,\n  green: 0.8862745,\n  hex: '#fce2f5'\n}], [{\n  red: 0.427451,\n  alpha: 1,\n  name: 'PurpleHeart',\n  blue: 0.6117647,\n  green: 0.2196078,\n  hex: '#6d389c'\n}, {\n  red: 0.5058824,\n  alpha: 1,\n  name: 'Studio',\n  blue: 0.7333333,\n  green: 0.254902,\n  hex: '#8141bb'\n}, {\n  red: 0.5843138,\n  alpha: 1,\n  name: 'Amethyst',\n  blue: 0.8156863,\n  green: 0.3333333,\n  hex: '#9555d0'\n}, {\n  red: 0.6313726,\n  alpha: 1,\n  name: 'LavenderIndigo',\n  blue: 0.9176471,\n  green: 0.3176471,\n  hex: '#a151ea'\n}, {\n  red: 0.7058824,\n  alpha: 1,\n  name: 'SoftPurple',\n  blue: 0.9333333,\n  green: 0.454902,\n  hex: '#b474ee'\n}, {\n  red: 0.8509804,\n  alpha: 1,\n  name: 'Perfume',\n  blue: 0.9686275,\n  green: 0.7254902,\n  hex: '#d9b9f7'\n}, {\n  red: 0.9411765,\n  alpha: 1,\n  name: 'BlueChalk',\n  blue: 0.9882353,\n  green: 0.8901961,\n  hex: '#f0e3fc'\n}], [{\n  red: 0.2392157,\n  alpha: 1,\n  name: 'DarkSlateBlue',\n  blue: 0.5529412,\n  green: 0.2470588,\n  hex: '#3d3f8d'\n}, {\n  red: 0.282353,\n  alpha: 1,\n  name: 'GovernorBay',\n  blue: 0.6627451,\n  green: 0.2901961,\n  hex: '#484aa9'\n}, {\n  red: 0.3607843,\n  alpha: 1,\n  name: 'BlueViolet',\n  blue: 0.7411765,\n  green: 0.372549,\n  hex: '#5c5fbd'\n}, {\n  red: 0.3529412,\n  alpha: 1,\n  name: 'Iris',\n  blue: 0.827451,\n  green: 0.3647059,\n  hex: '#5a5dd3'\n}, {\n  red: 0.4823529,\n  alpha: 1,\n  name: 'ChetwodeBlue',\n  blue: 0.8627451,\n  green: 0.4901961,\n  hex: '#7b7ddc'\n}, {\n  red: 0.7411765,\n  alpha: 1,\n  name: 'Melrose',\n  blue: 0.9294118,\n  green: 0.7450981,\n  hex: '#bdbeed'\n}, {\n  red: 0.8980392,\n  alpha: 1,\n  name: 'Lavender',\n  blue: 0.972549,\n  green: 0.8980392,\n  hex: '#e5e5f8'\n}], [{\n  red: 0.1294118,\n  alpha: 1,\n  name: 'Calypso',\n  blue: 0.5647059,\n  green: 0.4352941,\n  hex: '#216f90'\n}, {\n  red: 0.145098,\n  alpha: 1,\n  name: 'Astral',\n  blue: 0.6705883,\n  green: 0.509804,\n  hex: '#2582ab'\n}, {\n  red: 0.2235294,\n  alpha: 1,\n  name: 'BostonBlue',\n  blue: 0.7529412,\n  green: 0.5921569,\n  hex: '#3997c0'\n}, {\n  red: 0.1803922,\n  alpha: 1,\n  name: 'CuriousBlue',\n  blue: 0.8392157,\n  green: 0.6392157,\n  hex: '#2ea3d6'\n}, {\n  red: 0.345098,\n  alpha: 1,\n  name: 'Malibu',\n  blue: 0.8705882,\n  green: 0.7098039,\n  hex: '#58b5de'\n}, {\n  red: 0.6705883,\n  alpha: 1,\n  name: 'NonPhotoBlue',\n  blue: 0.9372549,\n  green: 0.854902,\n  hex: '#abdaef'\n}, {\n  red: 0.8666667,\n  alpha: 1,\n  name: 'PattensBlue',\n  blue: 0.9764706,\n  green: 0.9411765,\n  hex: '#ddf0f9'\n}], [{\n  red: 0.2078431,\n  alpha: 1,\n  name: 'Viridian',\n  blue: 0.4156863,\n  green: 0.5450981,\n  hex: '#358b6a'\n}, {\n  red: 0.2352941,\n  alpha: 1,\n  name: 'OceanGreen',\n  blue: 0.4784314,\n  green: 0.6392157,\n  hex: '#3ca37a'\n}, {\n  red: 0.3137255,\n  alpha: 1,\n  name: 'Mint',\n  blue: 0.5607843,\n  green: 0.7215686,\n  hex: '#50b88f'\n}, {\n  red: 0.2941177,\n  alpha: 1,\n  name: 'Shamrock',\n  blue: 0.6,\n  green: 0.8,\n  hex: '#4bcc99'\n}, {\n  red: 0.4352941,\n  alpha: 1,\n  name: 'MediumAquamarine',\n  blue: 0.6784314,\n  green: 0.8392157,\n  hex: '#6fd6ad'\n}, {\n  red: 0.7176471,\n  alpha: 1,\n  name: 'WaterLeaf',\n  blue: 0.8392157,\n  green: 0.9215686,\n  hex: '#b7ebd6'\n}, {\n  red: 0.8862745,\n  alpha: 1,\n  name: 'WhiteIce',\n  blue: 0.9372549,\n  green: 0.9686275,\n  hex: '#e2f7ef'\n}], [{\n  red: 0.2941177,\n  alpha: 1,\n  name: 'HippieGreen',\n  blue: 0.2901961,\n  green: 0.5176471,\n  hex: '#4b844a'\n}, {\n  red: 0.3411765,\n  alpha: 1,\n  name: 'FruitSalad',\n  blue: 0.3176471,\n  green: 0.6078432,\n  hex: '#579b51'\n}, {\n  red: 0.4235294,\n  alpha: 1,\n  name: 'Fern',\n  blue: 0.3960784,\n  green: 0.6901961,\n  hex: '#6cb065'\n}, {\n  red: 0.427451,\n  alpha: 1,\n  name: 'Mantis',\n  blue: 0.3960784,\n  green: 0.7607843,\n  hex: '#6dc265'\n}, {\n  red: 0.5411765,\n  alpha: 1,\n  name: 'DeYork',\n  blue: 0.5176471,\n  green: 0.8078431,\n  hex: '#8ace84'\n}, {\n  red: 0.772549,\n  alpha: 1,\n  name: 'GrannyApple',\n  blue: 0.7568628,\n  green: 0.9058824,\n  hex: '#c5e7c1'\n}, {\n  red: 0.9098039,\n  alpha: 1,\n  name: 'AquaSpringCool',\n  blue: 0.9019608,\n  green: 0.9607843,\n  hex: '#e8f5e6'\n}], [{\n  red: 0.4705882,\n  alpha: 1,\n  name: 'Asparagus',\n  blue: 0.2980392,\n  green: 0.5764706,\n  hex: '#78934c'\n}, {\n  red: 0.5529412,\n  alpha: 1,\n  name: 'ChelseaCucumber',\n  blue: 0.3176471,\n  green: 0.6784314,\n  hex: '#8dad51'\n}, {\n  red: 0.6313726,\n  alpha: 1,\n  name: 'Olivine',\n  blue: 0.3960784,\n  green: 0.7568628,\n  hex: '#a1c165'\n}, {\n  red: 0.6901961,\n  alpha: 1,\n  name: 'Conifer',\n  blue: 0.3960784,\n  green: 0.8470588,\n  hex: '#b0d865'\n}, {\n  red: 0.7529412,\n  alpha: 1,\n  name: 'YellowGreen',\n  blue: 0.5176471,\n  green: 0.8784314,\n  hex: '#c0e084'\n}, {\n  red: 0.8745098,\n  alpha: 1,\n  name: 'BerylGreen',\n  blue: 0.7568628,\n  green: 0.9372549,\n  hex: '#dfefc1'\n}, {\n  red: 0.9098039,\n  alpha: 1,\n  name: 'AquaSpringWarm',\n  blue: 0.9019608,\n  green: 0.9607843,\n  hex: '#e8f5e6'\n}], [{\n  red: 0.6352941,\n  alpha: 1,\n  name: 'MuddyWaters',\n  blue: 0.2901961,\n  green: 0.5529412,\n  hex: '#a28d4a'\n}, {\n  red: 0.7450981,\n  alpha: 1,\n  name: 'Sundance',\n  blue: 0.3098039,\n  green: 0.6509804,\n  hex: '#bea64f'\n}, {\n  red: 0.827451,\n  alpha: 1,\n  name: 'Tacha',\n  blue: 0.3921569,\n  green: 0.7333333,\n  hex: '#d3bb64'\n}, {\n  red: 0.9333333,\n  alpha: 1,\n  name: 'GoldenSand',\n  blue: 0.3882353,\n  green: 0.8156863,\n  hex: '#eed063'\n}, {\n  red: 0.945098,\n  alpha: 1,\n  name: 'Buff',\n  blue: 0.509804,\n  green: 0.8509804,\n  hex: '#f1d982'\n}, {\n  red: 0.972549,\n  alpha: 1,\n  name: 'Blond',\n  blue: 0.7568628,\n  green: 0.9254902,\n  hex: '#f8ecc1'\n}, {\n  red: 0.9882353,\n  alpha: 1,\n  name: 'OldLaceGreen',\n  blue: 0.9019608,\n  green: 0.9686275,\n  hex: '#fcf7e6'\n}], [{\n  red: 0.654902,\n  alpha: 1,\n  name: 'Alpine',\n  blue: 0.2588235,\n  green: 0.5058824,\n  hex: '#a78142'\n}, {\n  red: 0.7686275,\n  alpha: 1,\n  name: 'Tussock',\n  blue: 0.2666667,\n  green: 0.5960785,\n  hex: '#c49844'\n}, {\n  red: 0.8470588,\n  alpha: 1,\n  name: 'RobRoy',\n  blue: 0.345098,\n  green: 0.6745098,\n  hex: '#d8ac58'\n}, {\n  red: 0.9607843,\n  alpha: 1,\n  name: 'SaffronMango',\n  blue: 0.3333333,\n  green: 0.7450981,\n  hex: '#f5be55'\n}, {\n  red: 0.9686275,\n  alpha: 1,\n  name: 'Chardonnay',\n  blue: 0.4666667,\n  green: 0.7960784,\n  hex: '#f7cb77'\n}, {\n  red: 0.9843137,\n  alpha: 1,\n  name: 'DairyCream',\n  blue: 0.7333333,\n  green: 0.8980392,\n  hex: '#fbe5bb'\n}, {\n  red: 0.9921569,\n  alpha: 1,\n  name: 'OldLaceYellow',\n  blue: 0.8941177,\n  green: 0.9607843,\n  hex: '#fdf5e4'\n}], [{\n  red: 0.6705883,\n  alpha: 1,\n  name: 'Bourbon',\n  blue: 0.2235294,\n  green: 0.4470588,\n  hex: '#ab7239'\n}, {\n  red: 0.7882353,\n  alpha: 1,\n  name: 'GoldenBell',\n  blue: 0.2235294,\n  green: 0.5254902,\n  hex: '#c98639'\n}, {\n  red: 0.8666667,\n  alpha: 1,\n  name: 'FireBush',\n  blue: 0.3019608,\n  green: 0.6039216,\n  hex: '#dd9a4d'\n}, {\n  red: 0.9843137,\n  alpha: 1,\n  name: 'NeonCarrot',\n  blue: 0.2784314,\n  green: 0.654902,\n  hex: '#fba747'\n}, {\n  red: 0.9882353,\n  alpha: 1,\n  name: 'Rajah',\n  blue: 0.4235294,\n  green: 0.7254902,\n  hex: '#fcb96c'\n}, {\n  red: 0.9921569,\n  alpha: 1,\n  name: 'SandyBeach',\n  blue: 0.7098039,\n  green: 0.8627451,\n  hex: '#fddcb5'\n}, {\n  red: 0.9960784,\n  alpha: 1,\n  name: 'Sazerac',\n  blue: 0.8823529,\n  green: 0.945098,\n  hex: '#fef1e1'\n}], [{\n  red: 0.654902,\n  alpha: 1,\n  name: 'OrangeRoughy',\n  blue: 0.2,\n  green: 0.3176471,\n  hex: '#a75133'\n}, {\n  red: 0.7764706,\n  alpha: 1,\n  name: 'Ecstasy',\n  blue: 0.2117647,\n  green: 0.3686275,\n  hex: '#c65e36'\n}, {\n  red: 0.854902,\n  alpha: 1,\n  name: 'Jaffa',\n  blue: 0.2941177,\n  green: 0.4509804,\n  hex: '#da734b'\n}, {\n  red: 0.9686275,\n  alpha: 1,\n  name: 'OutrageousOrange',\n  blue: 0.2666667,\n  green: 0.4627451,\n  hex: '#f77644'\n}, {\n  red: 0.9764706,\n  alpha: 1,\n  name: 'Salmon',\n  blue: 0.4117647,\n  green: 0.5686275,\n  hex: '#f99169'\n}, {\n  red: 0.9882353,\n  alpha: 1,\n  name: 'Apricot',\n  blue: 0.7058824,\n  green: 0.7843137,\n  hex: '#fcc8b4'\n}, {\n  red: 0.9960784,\n  alpha: 1,\n  name: 'Chablis',\n  blue: 0.8823529,\n  green: 0.9137255,\n  hex: '#fee9e1'\n}], [{\n  red: 0.6431373,\n  alpha: 1,\n  name: 'MilanoRed',\n  blue: 0.1843137,\n  green: 0.1882353,\n  hex: '#a4302f'\n}, {\n  red: 0.7607843,\n  alpha: 1,\n  name: 'Mahogany',\n  blue: 0.2039216,\n  green: 0.2156863,\n  hex: '#c23734'\n}, {\n  red: 0.8392157,\n  alpha: 1,\n  name: 'Valencia',\n  blue: 0.2980392,\n  green: 0.3137255,\n  hex: '#d6504c'\n}, {\n  red: 0.9490196,\n  alpha: 1,\n  name: 'CarminePink',\n  blue: 0.254902,\n  green: 0.2705882,\n  hex: '#f24541'\n}, {\n  red: 0.9607843,\n  alpha: 1,\n  name: 'PastelRed',\n  blue: 0.4039216,\n  green: 0.4156863,\n  hex: '#f56a67'\n}, {\n  red: 0.9803922,\n  alpha: 1,\n  name: 'Sundown',\n  blue: 0.7019608,\n  green: 0.7098039,\n  hex: '#fab5b3'\n}, {\n  red: 0.9921569,\n  alpha: 1,\n  name: 'Pippin',\n  blue: 0.8823529,\n  green: 0.8823529,\n  hex: '#fde1e1'\n}]];\nfunction getC(arg1, arg2) {\n  var hue = void 0;\n  var shad = void 0;\n  if (typeof arg1 === 'string' && arg2 === null) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = PalleteArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var v = _step.value;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = v[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var c = _step2.value;\n\n            if (c.name === arg1) return c;\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    throw new Error(\"can't find colour\");\n  } else if (typeof arg1 === 'number' && arg2 === null) throw 'invalid';\n  if (typeof arg1 === 'number') hue = arg1;\n  if (typeof arg2 === 'number') shad = arg2;\n  if (typeof arg1 === 'string' && arg2 !== null) hue = hues[arg1];\n  if (typeof arg2 === 'string') shad = shades[arg2];\n  try {\n    return PalleteArray[hue][shad];\n  } catch (error) {\n    throw error;\n  }\n}\n\n/***/ })\n\n},[511]);\n\n\n// WEBPACK FOOTER //\n// bundle.3c6fc40110d634eaf1e5.js","'use-strict';\nimport { voronoi, polygonCentroid } from 'd3';\nimport _ from 'lodash';\nimport bSpline from 'b-spline';\nimport getC from './pallete';\n\nlet sites = [];\nlet canvasExtent;\nlet vorFunction;\nlet vorDiagram;\n\n/** @type {vorManagement} */\nexport function preload() {}\nexport function setup() {\n  createCanvas( window.innerWidth, window.innerHeight );\n  canvasExtent = min( width, height );\n  let perLineCount = floor( canvasExtent / 30 );\n  let pointCount = pow( perLineCount, 2 );\n  console.log( 'per line count: ' + perLineCount );\n  _.range( pointCount ).map( index => {\n    let y = floor( index / perLineCount ) * 30;\n    let x = ( index % perLineCount ) * 30;\n    y = 30 + y + _.random( -30, 30 );\n    x = 30 + x + _.random( -30, 30 );\n    let gap = canvasExtent / 8;\n    y = map( y, 0, canvasExtent, gap * 7, canvasExtent - gap * 7 );\n    x = map( x, 0, canvasExtent, gap * 7, canvasExtent - gap * 7 );\n\n    let siteData = {\n      i: index,\n      x: x,\n      y: y,\n      c: getC( _.random( 3, 14 ), _.random( 4, 5 ) ).hex,\n      neighbours: [],\n      posAsArray: function() {\n        return [this.x, this.y];\n      }\n    };\n    sites.push( siteData );\n  } );\n  sites.resetFunc = function( func, thisArr ) {\n    for ( let i = 0; i < thisArr.length; i++ ) {\n      thisArr[i].neighbours.length = 0;\n    }\n    let d = func( thisArr );\n\n    d.links().map( link => {\n      link.source.neighbours.push( link.target );\n      link.target.neighbours.push( link.source );\n    } );\n    return d;\n  };\n  vorFunction = voronoi()\n    .size( [canvasExtent, canvasExtent] )\n    .x( site => site.x )\n    .y( site => site.y );\n  vorDiagram = sites.resetFunc( vorFunction, sites );\n}\nexport function draw() {\n  background( 255, 30 );\n  // translate( -( canvasExtent / 2 ), -( canvasExtent / 2 ) );\n  fill( 200, 100, 100 );\n  strokeWeight( 2 );\n  let pGons = vorDiagram.polygons();\n  pGons.map( poly => {\n    // beginShape();\n    // fill( poly.data.c );\n    // poly.map( point => vertex( point[0], point[1] ) );\n    // endShape( CLOSE );\n  } );\n  strokeWeight( 3 );\n  stroke( getC( 2, 2 ).hex );\n  let visited = [];\n  let frontier = [];\n  let cameFrom = new Array( sites.length ).fill( null );\n  let splines = [];\n  let first = vorDiagram.find( canvasExtent / 2, canvasExtent / 2 );\n  let crackFunc = ( visitArray, frontierArray ) => {\n    if ( frontierArray.length === 0 ) return;\n\n    let node = frontierArray.splice( 0, 1 )[0];\n    node.neighbours.map( n => {\n      if ( !visited.includes( n ) ) {\n        let strokeC = lerpColor(\n          color( 255, 0, 0 ),\n          color( 255 ),\n          visitArray.length / sites.length\n        ).toString( '#rrggbb' );\n        node.c = strokeC;\n        // line( node.x, node.y, n.x, n.y );\n        frontierArray.push( n );\n        visited.push( n );\n        cameFrom[n.i] = node;\n      }\n    } );\n    crackFunc( visitArray, frontierArray );\n  };\n  frontier.push( first.data );\n  visited.push( first.data );\n  crackFunc( visited, frontier );\n  sites.map( n => {\n    let journeyToHere = [];\n    journeyToHere.push( n.posAsArray( n ) );\n    journeyToHere.push( n.posAsArray( n ) );\n    journeyToHere.push( n.posAsArray( n ) );\n    journeyToHere.push( n.posAsArray( n ) );\n    let lineCalc = ( pre, lineArr, pathArr ) => {\n      if ( pre === null ) return;\n      if ( pathArr[pre.i] === null ) {\n        lineArr.push( pre.posAsArray( n ) );\n      } else {\n        lineArr.push( pre.posAsArray( n ) );\n        let next = pathArr[pre.i];\n        let thisI = pathArr.indexOf( pre );\n        // pathArr[thisI] = null;\n        lineCalc( next, lineArr, pathArr );\n      }\n    };\n    lineCalc( cameFrom[n.i], journeyToHere, cameFrom );\n    journeyToHere.push( journeyToHere[journeyToHere.length - 1] );\n    noFill();\n    beginShape();\n    for ( let i = 0; i < 1; i += 0.001 ) {\n      let pt = bSpline( i, 4, journeyToHere );\n      curveVertex( pt[0], pt[1] );\n    }\n    endShape();\n  } );\n\n  pGons.map( poly => {\n    let c = polygonCentroid( poly );\n    poly.data.x = c[0];\n    poly.data.y = c[1];\n  } );\n\n  vorDiagram = sites.resetFunc( vorFunction, sites );\n  filter( BLUR, 1 );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketch/main.js","import * as sketchHooks from './sketch/main';\n( w =>\n  Object.keys( sketchHooks ).forEach( hook => {\n    w[hook] = sketchHooks[hook];\n  } ) )( window );\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","export var hues;\n( function( hues ) {\n  hues[( hues['cools'] = 0 )] = 'cools';\n  hues[( hues['warms'] = 1 )] = 'warms';\n  hues[( hues['neutrals'] = 2 )] = 'neutrals';\n  hues[( hues['pinks'] = 3 )] = 'pinks';\n  hues[( hues['purples'] = 4 )] = 'purples';\n  hues[( hues['violets'] = 5 )] = 'violets';\n  hues[( hues['blues'] = 6 )] = 'blues';\n  hues[( hues['aquas'] = 7 )] = 'aquas';\n  hues[( hues['greens'] = 8 )] = 'greens';\n  hues[( hues['limes'] = 9 )] = 'limes';\n  hues[( hues['yellows'] = 10 )] = 'yellows';\n  hues[( hues['browns'] = 11 )] = 'browns';\n  hues[( hues['oranges'] = 12 )] = 'oranges';\n  hues[( hues['apricots'] = 13 )] = 'apricots';\n  hues[( hues['reds'] = 14 )] = 'reds';\n} )( hues || ( hues = {} ) );\nexport var shades;\n( function( shades ) {\n  shades[( shades['black'] = 0 )] = 'black';\n  shades[( shades['dark'] = 1 )] = 'dark';\n  shades[( shades['mediumDark'] = 2 )] = 'mediumDark';\n  shades[( shades['medium'] = 3 )] = 'medium';\n  shades[( shades['mediumLight'] = 4 )] = 'mediumLight';\n  shades[( shades['light'] = 5 )] = 'light';\n  shades[( shades['white'] = 6 )] = 'white';\n} )( shades || ( shades = {} ) );\nconst PalleteArray = [\n  [\n    {\n      red: 0.2117647,\n      alpha: 1,\n      name: 'BigStone',\n      blue: 0.2745098,\n      green: 0.254902,\n      hex: '#364146'\n    },\n    {\n      red: 0.2666667,\n      alpha: 1,\n      name: 'RiverBed',\n      blue: 0.3372549,\n      green: 0.3137255,\n      hex: '#445056'\n    },\n    {\n      red: 0.4666667,\n      alpha: 1,\n      name: 'RegentGray',\n      blue: 0.5333334,\n      green: 0.5137255,\n      hex: '#778388'\n    },\n    {\n      red: 0.6627451,\n      alpha: 1,\n      name: 'Casper',\n      blue: 0.7294118,\n      green: 0.7098039,\n      hex: '#a9b5ba'\n    },\n    {\n      red: 0.07058824,\n      alpha: 1,\n      name: 'Mirage',\n      blue: 0.1372549,\n      green: 0.1176471,\n      hex: '#121e23'\n    },\n    {\n      red: 0.8588235,\n      alpha: 1,\n      name: 'Tranquil',\n      blue: 0.9254902,\n      green: 0.9058824,\n      hex: '#dbe7ec'\n    },\n    {\n      red: 0.8980392,\n      alpha: 1,\n      name: 'AquaSqueeze',\n      blue: 0.9647059,\n      green: 0.945098,\n      hex: '#e5f1f6'\n    }\n  ],\n  [\n    {\n      red: 0.1529412,\n      alpha: 1,\n      name: 'Oil',\n      blue: 0.08235294,\n      green: 0.1176471,\n      hex: '#271e15'\n    },\n    {\n      red: 0.2941177,\n      alpha: 1,\n      name: 'SpaceShuttle',\n      blue: 0.2235294,\n      green: 0.2627451,\n      hex: '#4b4339'\n    },\n    {\n      red: 0.34902,\n      alpha: 1,\n      name: 'Masala',\n      blue: 0.28235,\n      green: 0.31765,\n      hex: '#595148'\n    },\n    {\n      red: 0.5490196,\n      alpha: 1,\n      name: 'Schooner',\n      blue: 0.4745098,\n      green: 0.5137255,\n      hex: '#8c8379'\n    },\n    {\n      red: 0.7450981,\n      alpha: 1,\n      name: 'Tide',\n      blue: 0.6745098,\n      green: 0.7098039,\n      hex: '#beb5ac'\n    },\n    {\n      red: 0.9411765,\n      alpha: 1,\n      name: 'DesertStorm',\n      blue: 0.8705882,\n      green: 0.9098039,\n      hex: '#f0e8de'\n    },\n    {\n      red: 0.9803922,\n      alpha: 1,\n      name: 'WhiteLinen',\n      blue: 0.9098039,\n      green: 0.9490196,\n      hex: '#faf2e8'\n    }\n  ],\n  [\n    {\n      red: 0.05882353,\n      alpha: 1,\n      name: 'Onyx',\n      blue: 0.05882353,\n      green: 0.05882353,\n      hex: '#0f0f0f'\n    },\n    {\n      red: 0.2156863,\n      alpha: 1,\n      name: 'Tuatara',\n      blue: 0.2156863,\n      green: 0.2156863,\n      hex: '#373737'\n    },\n    {\n      red: 0.2784314,\n      alpha: 1,\n      name: 'Charcoal',\n      blue: 0.2784314,\n      green: 0.2784314,\n      hex: '#474747'\n    },\n    {\n      red: 0.4980392,\n      alpha: 1,\n      name: 'Tin',\n      blue: 0.4980392,\n      green: 0.4980392,\n      hex: '#7f7f7f'\n    },\n    {\n      red: 0.7176471,\n      alpha: 1,\n      name: 'Loblolly',\n      blue: 0.7176471,\n      green: 0.7176471,\n      hex: '#b7b7b7'\n    },\n    {\n      red: 0.9372549,\n      alpha: 1,\n      name: 'Gallery',\n      blue: 0.9372549,\n      green: 0.9372549,\n      hex: '#efefef'\n    },\n    {\n      red: 0.9803922,\n      alpha: 1,\n      name: 'Alabaster',\n      blue: 0.9803922,\n      green: 0.9803922,\n      hex: '#fafafa'\n    }\n  ],\n  [\n    {\n      red: 0.6313726,\n      alpha: 1,\n      name: 'RoyalHeath',\n      blue: 0.5058824,\n      green: 0.1960784,\n      hex: '#a13281'\n    },\n    {\n      red: 0.7450981,\n      alpha: 1,\n      name: 'Byzantine',\n      blue: 0.6039216,\n      green: 0.227451,\n      hex: '#be3a9a'\n    },\n    {\n      red: 0.827451,\n      alpha: 1,\n      name: 'DeepFuchsia',\n      blue: 0.6862745,\n      green: 0.3098039,\n      hex: '#d34faf'\n    },\n    {\n      red: 0.9333333,\n      alpha: 1,\n      name: 'NeonFuchsia',\n      blue: 0.7568628,\n      green: 0.2862745,\n      hex: '#ee49c1'\n    },\n    {\n      red: 0.945098,\n      alpha: 1,\n      name: 'RosePink',\n      blue: 0.8039216,\n      green: 0.427451,\n      hex: '#f16dcd'\n    },\n    {\n      red: 0.972549,\n      alpha: 1,\n      name: 'Chantilly',\n      blue: 0.9019608,\n      green: 0.7137255,\n      hex: '#f8b6e6'\n    },\n    {\n      red: 0.9882353,\n      alpha: 1,\n      name: 'PaleRose',\n      blue: 0.9607843,\n      green: 0.8862745,\n      hex: '#fce2f5'\n    }\n  ],\n  [\n    {\n      red: 0.427451,\n      alpha: 1,\n      name: 'PurpleHeart',\n      blue: 0.6117647,\n      green: 0.2196078,\n      hex: '#6d389c'\n    },\n    {\n      red: 0.5058824,\n      alpha: 1,\n      name: 'Studio',\n      blue: 0.7333333,\n      green: 0.254902,\n      hex: '#8141bb'\n    },\n    {\n      red: 0.5843138,\n      alpha: 1,\n      name: 'Amethyst',\n      blue: 0.8156863,\n      green: 0.3333333,\n      hex: '#9555d0'\n    },\n    {\n      red: 0.6313726,\n      alpha: 1,\n      name: 'LavenderIndigo',\n      blue: 0.9176471,\n      green: 0.3176471,\n      hex: '#a151ea'\n    },\n    {\n      red: 0.7058824,\n      alpha: 1,\n      name: 'SoftPurple',\n      blue: 0.9333333,\n      green: 0.454902,\n      hex: '#b474ee'\n    },\n    {\n      red: 0.8509804,\n      alpha: 1,\n      name: 'Perfume',\n      blue: 0.9686275,\n      green: 0.7254902,\n      hex: '#d9b9f7'\n    },\n    {\n      red: 0.9411765,\n      alpha: 1,\n      name: 'BlueChalk',\n      blue: 0.9882353,\n      green: 0.8901961,\n      hex: '#f0e3fc'\n    }\n  ],\n  [\n    {\n      red: 0.2392157,\n      alpha: 1,\n      name: 'DarkSlateBlue',\n      blue: 0.5529412,\n      green: 0.2470588,\n      hex: '#3d3f8d'\n    },\n    {\n      red: 0.282353,\n      alpha: 1,\n      name: 'GovernorBay',\n      blue: 0.6627451,\n      green: 0.2901961,\n      hex: '#484aa9'\n    },\n    {\n      red: 0.3607843,\n      alpha: 1,\n      name: 'BlueViolet',\n      blue: 0.7411765,\n      green: 0.372549,\n      hex: '#5c5fbd'\n    },\n    {\n      red: 0.3529412,\n      alpha: 1,\n      name: 'Iris',\n      blue: 0.827451,\n      green: 0.3647059,\n      hex: '#5a5dd3'\n    },\n    {\n      red: 0.4823529,\n      alpha: 1,\n      name: 'ChetwodeBlue',\n      blue: 0.8627451,\n      green: 0.4901961,\n      hex: '#7b7ddc'\n    },\n    {\n      red: 0.7411765,\n      alpha: 1,\n      name: 'Melrose',\n      blue: 0.9294118,\n      green: 0.7450981,\n      hex: '#bdbeed'\n    },\n    {\n      red: 0.8980392,\n      alpha: 1,\n      name: 'Lavender',\n      blue: 0.972549,\n      green: 0.8980392,\n      hex: '#e5e5f8'\n    }\n  ],\n  [\n    {\n      red: 0.1294118,\n      alpha: 1,\n      name: 'Calypso',\n      blue: 0.5647059,\n      green: 0.4352941,\n      hex: '#216f90'\n    },\n    {\n      red: 0.145098,\n      alpha: 1,\n      name: 'Astral',\n      blue: 0.6705883,\n      green: 0.509804,\n      hex: '#2582ab'\n    },\n    {\n      red: 0.2235294,\n      alpha: 1,\n      name: 'BostonBlue',\n      blue: 0.7529412,\n      green: 0.5921569,\n      hex: '#3997c0'\n    },\n    {\n      red: 0.1803922,\n      alpha: 1,\n      name: 'CuriousBlue',\n      blue: 0.8392157,\n      green: 0.6392157,\n      hex: '#2ea3d6'\n    },\n    {\n      red: 0.345098,\n      alpha: 1,\n      name: 'Malibu',\n      blue: 0.8705882,\n      green: 0.7098039,\n      hex: '#58b5de'\n    },\n    {\n      red: 0.6705883,\n      alpha: 1,\n      name: 'NonPhotoBlue',\n      blue: 0.9372549,\n      green: 0.854902,\n      hex: '#abdaef'\n    },\n    {\n      red: 0.8666667,\n      alpha: 1,\n      name: 'PattensBlue',\n      blue: 0.9764706,\n      green: 0.9411765,\n      hex: '#ddf0f9'\n    }\n  ],\n  [\n    {\n      red: 0.2078431,\n      alpha: 1,\n      name: 'Viridian',\n      blue: 0.4156863,\n      green: 0.5450981,\n      hex: '#358b6a'\n    },\n    {\n      red: 0.2352941,\n      alpha: 1,\n      name: 'OceanGreen',\n      blue: 0.4784314,\n      green: 0.6392157,\n      hex: '#3ca37a'\n    },\n    {\n      red: 0.3137255,\n      alpha: 1,\n      name: 'Mint',\n      blue: 0.5607843,\n      green: 0.7215686,\n      hex: '#50b88f'\n    },\n    {\n      red: 0.2941177,\n      alpha: 1,\n      name: 'Shamrock',\n      blue: 0.6,\n      green: 0.8,\n      hex: '#4bcc99'\n    },\n    {\n      red: 0.4352941,\n      alpha: 1,\n      name: 'MediumAquamarine',\n      blue: 0.6784314,\n      green: 0.8392157,\n      hex: '#6fd6ad'\n    },\n    {\n      red: 0.7176471,\n      alpha: 1,\n      name: 'WaterLeaf',\n      blue: 0.8392157,\n      green: 0.9215686,\n      hex: '#b7ebd6'\n    },\n    {\n      red: 0.8862745,\n      alpha: 1,\n      name: 'WhiteIce',\n      blue: 0.9372549,\n      green: 0.9686275,\n      hex: '#e2f7ef'\n    }\n  ],\n  [\n    {\n      red: 0.2941177,\n      alpha: 1,\n      name: 'HippieGreen',\n      blue: 0.2901961,\n      green: 0.5176471,\n      hex: '#4b844a'\n    },\n    {\n      red: 0.3411765,\n      alpha: 1,\n      name: 'FruitSalad',\n      blue: 0.3176471,\n      green: 0.6078432,\n      hex: '#579b51'\n    },\n    {\n      red: 0.4235294,\n      alpha: 1,\n      name: 'Fern',\n      blue: 0.3960784,\n      green: 0.6901961,\n      hex: '#6cb065'\n    },\n    {\n      red: 0.427451,\n      alpha: 1,\n      name: 'Mantis',\n      blue: 0.3960784,\n      green: 0.7607843,\n      hex: '#6dc265'\n    },\n    {\n      red: 0.5411765,\n      alpha: 1,\n      name: 'DeYork',\n      blue: 0.5176471,\n      green: 0.8078431,\n      hex: '#8ace84'\n    },\n    {\n      red: 0.772549,\n      alpha: 1,\n      name: 'GrannyApple',\n      blue: 0.7568628,\n      green: 0.9058824,\n      hex: '#c5e7c1'\n    },\n    {\n      red: 0.9098039,\n      alpha: 1,\n      name: 'AquaSpringCool',\n      blue: 0.9019608,\n      green: 0.9607843,\n      hex: '#e8f5e6'\n    }\n  ],\n  [\n    {\n      red: 0.4705882,\n      alpha: 1,\n      name: 'Asparagus',\n      blue: 0.2980392,\n      green: 0.5764706,\n      hex: '#78934c'\n    },\n    {\n      red: 0.5529412,\n      alpha: 1,\n      name: 'ChelseaCucumber',\n      blue: 0.3176471,\n      green: 0.6784314,\n      hex: '#8dad51'\n    },\n    {\n      red: 0.6313726,\n      alpha: 1,\n      name: 'Olivine',\n      blue: 0.3960784,\n      green: 0.7568628,\n      hex: '#a1c165'\n    },\n    {\n      red: 0.6901961,\n      alpha: 1,\n      name: 'Conifer',\n      blue: 0.3960784,\n      green: 0.8470588,\n      hex: '#b0d865'\n    },\n    {\n      red: 0.7529412,\n      alpha: 1,\n      name: 'YellowGreen',\n      blue: 0.5176471,\n      green: 0.8784314,\n      hex: '#c0e084'\n    },\n    {\n      red: 0.8745098,\n      alpha: 1,\n      name: 'BerylGreen',\n      blue: 0.7568628,\n      green: 0.9372549,\n      hex: '#dfefc1'\n    },\n    {\n      red: 0.9098039,\n      alpha: 1,\n      name: 'AquaSpringWarm',\n      blue: 0.9019608,\n      green: 0.9607843,\n      hex: '#e8f5e6'\n    }\n  ],\n  [\n    {\n      red: 0.6352941,\n      alpha: 1,\n      name: 'MuddyWaters',\n      blue: 0.2901961,\n      green: 0.5529412,\n      hex: '#a28d4a'\n    },\n    {\n      red: 0.7450981,\n      alpha: 1,\n      name: 'Sundance',\n      blue: 0.3098039,\n      green: 0.6509804,\n      hex: '#bea64f'\n    },\n    {\n      red: 0.827451,\n      alpha: 1,\n      name: 'Tacha',\n      blue: 0.3921569,\n      green: 0.7333333,\n      hex: '#d3bb64'\n    },\n    {\n      red: 0.9333333,\n      alpha: 1,\n      name: 'GoldenSand',\n      blue: 0.3882353,\n      green: 0.8156863,\n      hex: '#eed063'\n    },\n    {\n      red: 0.945098,\n      alpha: 1,\n      name: 'Buff',\n      blue: 0.509804,\n      green: 0.8509804,\n      hex: '#f1d982'\n    },\n    {\n      red: 0.972549,\n      alpha: 1,\n      name: 'Blond',\n      blue: 0.7568628,\n      green: 0.9254902,\n      hex: '#f8ecc1'\n    },\n    {\n      red: 0.9882353,\n      alpha: 1,\n      name: 'OldLaceGreen',\n      blue: 0.9019608,\n      green: 0.9686275,\n      hex: '#fcf7e6'\n    }\n  ],\n  [\n    {\n      red: 0.654902,\n      alpha: 1,\n      name: 'Alpine',\n      blue: 0.2588235,\n      green: 0.5058824,\n      hex: '#a78142'\n    },\n    {\n      red: 0.7686275,\n      alpha: 1,\n      name: 'Tussock',\n      blue: 0.2666667,\n      green: 0.5960785,\n      hex: '#c49844'\n    },\n    {\n      red: 0.8470588,\n      alpha: 1,\n      name: 'RobRoy',\n      blue: 0.345098,\n      green: 0.6745098,\n      hex: '#d8ac58'\n    },\n    {\n      red: 0.9607843,\n      alpha: 1,\n      name: 'SaffronMango',\n      blue: 0.3333333,\n      green: 0.7450981,\n      hex: '#f5be55'\n    },\n    {\n      red: 0.9686275,\n      alpha: 1,\n      name: 'Chardonnay',\n      blue: 0.4666667,\n      green: 0.7960784,\n      hex: '#f7cb77'\n    },\n    {\n      red: 0.9843137,\n      alpha: 1,\n      name: 'DairyCream',\n      blue: 0.7333333,\n      green: 0.8980392,\n      hex: '#fbe5bb'\n    },\n    {\n      red: 0.9921569,\n      alpha: 1,\n      name: 'OldLaceYellow',\n      blue: 0.8941177,\n      green: 0.9607843,\n      hex: '#fdf5e4'\n    }\n  ],\n  [\n    {\n      red: 0.6705883,\n      alpha: 1,\n      name: 'Bourbon',\n      blue: 0.2235294,\n      green: 0.4470588,\n      hex: '#ab7239'\n    },\n    {\n      red: 0.7882353,\n      alpha: 1,\n      name: 'GoldenBell',\n      blue: 0.2235294,\n      green: 0.5254902,\n      hex: '#c98639'\n    },\n    {\n      red: 0.8666667,\n      alpha: 1,\n      name: 'FireBush',\n      blue: 0.3019608,\n      green: 0.6039216,\n      hex: '#dd9a4d'\n    },\n    {\n      red: 0.9843137,\n      alpha: 1,\n      name: 'NeonCarrot',\n      blue: 0.2784314,\n      green: 0.654902,\n      hex: '#fba747'\n    },\n    {\n      red: 0.9882353,\n      alpha: 1,\n      name: 'Rajah',\n      blue: 0.4235294,\n      green: 0.7254902,\n      hex: '#fcb96c'\n    },\n    {\n      red: 0.9921569,\n      alpha: 1,\n      name: 'SandyBeach',\n      blue: 0.7098039,\n      green: 0.8627451,\n      hex: '#fddcb5'\n    },\n    {\n      red: 0.9960784,\n      alpha: 1,\n      name: 'Sazerac',\n      blue: 0.8823529,\n      green: 0.945098,\n      hex: '#fef1e1'\n    }\n  ],\n  [\n    {\n      red: 0.654902,\n      alpha: 1,\n      name: 'OrangeRoughy',\n      blue: 0.2,\n      green: 0.3176471,\n      hex: '#a75133'\n    },\n    {\n      red: 0.7764706,\n      alpha: 1,\n      name: 'Ecstasy',\n      blue: 0.2117647,\n      green: 0.3686275,\n      hex: '#c65e36'\n    },\n    {\n      red: 0.854902,\n      alpha: 1,\n      name: 'Jaffa',\n      blue: 0.2941177,\n      green: 0.4509804,\n      hex: '#da734b'\n    },\n    {\n      red: 0.9686275,\n      alpha: 1,\n      name: 'OutrageousOrange',\n      blue: 0.2666667,\n      green: 0.4627451,\n      hex: '#f77644'\n    },\n    {\n      red: 0.9764706,\n      alpha: 1,\n      name: 'Salmon',\n      blue: 0.4117647,\n      green: 0.5686275,\n      hex: '#f99169'\n    },\n    {\n      red: 0.9882353,\n      alpha: 1,\n      name: 'Apricot',\n      blue: 0.7058824,\n      green: 0.7843137,\n      hex: '#fcc8b4'\n    },\n    {\n      red: 0.9960784,\n      alpha: 1,\n      name: 'Chablis',\n      blue: 0.8823529,\n      green: 0.9137255,\n      hex: '#fee9e1'\n    }\n  ],\n  [\n    {\n      red: 0.6431373,\n      alpha: 1,\n      name: 'MilanoRed',\n      blue: 0.1843137,\n      green: 0.1882353,\n      hex: '#a4302f'\n    },\n    {\n      red: 0.7607843,\n      alpha: 1,\n      name: 'Mahogany',\n      blue: 0.2039216,\n      green: 0.2156863,\n      hex: '#c23734'\n    },\n    {\n      red: 0.8392157,\n      alpha: 1,\n      name: 'Valencia',\n      blue: 0.2980392,\n      green: 0.3137255,\n      hex: '#d6504c'\n    },\n    {\n      red: 0.9490196,\n      alpha: 1,\n      name: 'CarminePink',\n      blue: 0.254902,\n      green: 0.2705882,\n      hex: '#f24541'\n    },\n    {\n      red: 0.9607843,\n      alpha: 1,\n      name: 'PastelRed',\n      blue: 0.4039216,\n      green: 0.4156863,\n      hex: '#f56a67'\n    },\n    {\n      red: 0.9803922,\n      alpha: 1,\n      name: 'Sundown',\n      blue: 0.7019608,\n      green: 0.7098039,\n      hex: '#fab5b3'\n    },\n    {\n      red: 0.9921569,\n      alpha: 1,\n      name: 'Pippin',\n      blue: 0.8823529,\n      green: 0.8823529,\n      hex: '#fde1e1'\n    }\n  ]\n];\nexport default function getC( arg1, arg2 ) {\n  let hue;\n  let shad;\n  if ( typeof arg1 === 'string' && arg2 === null ) {\n    for ( let v of PalleteArray ) {\n      for ( let c of v ) {\n        if ( c.name === arg1 ) return c;\n      }\n    }\n    throw new Error( \"can't find colour\" );\n  } else if ( typeof arg1 === 'number' && arg2 === null ) throw 'invalid';\n  if ( typeof arg1 === 'number' ) hue = arg1;\n  if ( typeof arg2 === 'number' ) shad = arg2;\n  if ( typeof arg1 === 'string' && arg2 !== null ) hue = hues[arg1];\n  if ( typeof arg2 === 'string' ) shad = shades[arg2];\n  try {\n    return PalleteArray[hue][shad];\n  } catch ( error ) {\n    throw error;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketch/pallete.js"],"sourceRoot":""}