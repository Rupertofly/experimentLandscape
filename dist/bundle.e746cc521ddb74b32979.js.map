{"version":3,"sources":["webpack:///bundle.e746cc521ddb74b32979.js","webpack:///./src/sketch/helperFuncs.js","webpack:///./src/sketch/main.js","webpack:///./src/index.js","webpack:///./src/sketch/pallete.js","webpack:///./src/sketch/test.js","webpack:///./src/sketch/vorManagement.js"],"names":["webpackJsonp","179","module","exports","__webpack_require__","hash","s","a","c","h","o","length","charCodeAt","toString","toUpperCase","checkNested","obj","args","Array","prototype","slice","call","arguments","i","hasOwnProperty","recordFrame","frameCount","lastFrame","recorder","capture","canvasObject","stop","save","recordSetup","CCapture","format","framerate","document","getElementById","start","sqr","x","dist2","v","w","distToSegmentSquared","p","l2","t","y","Math","max","min","distToSegment","sqrt","getRandomInt","ceil","floor","random","Object","defineProperty","value","entries","ownProps","keys","resArray","181","_interopRequireDefault","__esModule","default","_toConsumableArray","arr","isArray","arr2","from","preload","setup","createCanvas","window","innerWidth","innerHeight","background","_pallete2","_helperFuncs","hex","draw","vm","fSim","restart","nodes","activePoints","alphaTarget","alpha","tick","fillerPoints","mouseX","mouseY","regenerateMesh","relaxLikeLloyd","outerPolys","activeEdgeGroups","map","group","splinePoints","fill","noStroke","beginShape","_bSpline2","curveVertex","endShape","CLOSE","stroke","strokeWeight","mousePressed","addActivePoint","_pallete","_index","_vorManagement","_vorManagement2","_test","_d","_bSpline","newObj","key","vorManagement","width","height","fillPC","531","_main","sketchHooks","forEach","hook","532","getC","arg1","arg2","hue","shad","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","PalleteArray","Symbol","iterator","next","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","name","err","return","Error","hues","shades","error","red","blue","green","533","add","b","534","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","d3","VorManagement","opts","_this","this","updatePolygons","exisDA","boundryPoints","innerPolys","forceSimulation","alphaDecay","velocityDecay","force","forceManyBody","strength","distanceMax","fr","distanceMin","xForce","forceX","d","cx","forceY","cy","innerMap","voronoi","size","outerMap","extent","generateRandMesh","graph","range","0","1","class","filler","generateBoundryPoints","offset","output","xCount","push","yCount","_this2","aEdges","outerMesh","edges","edge","left","right","leftIs","includes","data","rightIs","n","fakeOutCount","outputGroup","sortP","point","out","splice","indexOf","console","log","innerMesh","concat","polygons","getActiveEdges","_this3","centroid","polygonCentroid","cl","dat","id"],"mappings":"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","file":"bundle.e746cc521ddb74b32979.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 179:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hash = hash;\nexports.checkNested = checkNested;\nexports.recordFrame = recordFrame;\nexports.recordSetup = recordSetup;\nexports.distToSegment = distToSegment;\nexports.getRandomInt = getRandomInt;\n\nvar _d = __webpack_require__(92);\n\nif (!Object.entries) {\n  Object.entries = function (obj) {\n    var ownProps = Object.keys(obj);\n    var i = ownProps.length;\n    var resArray = new Array(i); // preallocate the Array\n    while (i--) {\n      resArray[i] = [ownProps[i], obj[ownProps[i]]];\n    }return resArray;\n  };\n} // @ts-check\n\n/* eslint no-unused-vars: 0 */\nfunction hash(s) {\n  /* Simple hash function. */\n  var a = 1;\n  var c = 0;\n  var h = void 0;\n  var o = void 0;\n  if (s) {\n    a = 0;\n    /* jshint plusplus:false bitwise:false */\n    for (h = s.length - 1; h >= 0; h--) {\n      o = s.charCodeAt(h);\n      a = (a << 6 & 268435455) + o + (o << 14);\n      c = a & 266338304;\n      a = c !== 0 ? a ^ c >> 21 : a;\n    }\n  }\n  return a.toString(16).toUpperCase();\n}\n/**\n * Checks to See if Object contains\n *\n * @param {...any} obj object to see\n * @returns {Boolean} isNested\n */\nfunction checkNested(obj /*, level1, level2, ... levelN */) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  for (var i = 0; i < args.length; i++) {\n    if (!obj || !obj.hasOwnProperty(args[i])) {\n      return false;\n    }\n    obj = obj[args[i]];\n  }\n  return true;\n}\nvar recorder;\nvar canvasObject;\nvar lastFrame = 60;\n\n// For Recording\n\n/**\n * Adds A frame to the recording and saves if at end\n *\n */\nfunction recordFrame() {\n  if (frameCount <= lastFrame) {\n    recorder.capture(canvasObject);\n    if (frameCount === lastFrame) {\n      recorder.stop();\n      recorder.save();\n    }\n  }\n}\n/**\n * Set's up Recording\n *\n */\nfunction recordSetup() {\n  recorder = new CCapture({\n    format: 'webm',\n    framerate: 60\n  });\n  canvasObject = document.getElementById('defaultCanvas0');\n  recorder.start();\n}\nfunction sqr(x) {\n  return x * x;\n}\nfunction dist2(v, w) {\n  return sqr(v[0] - w[0]) + sqr(v[1] - w[1]);\n}\nfunction distToSegmentSquared(p, v, w) {\n  var l2 = dist2(v, w);\n  if (l2 === 0) return dist2(p, v);\n  var t = ((p.x - v[0]) * (w[0] - v[0]) + (p.y - v[1]) * (w[1] - v[1])) / l2;\n  t = Math.max(0, Math.min(1, t));\n  return dist2(p, [v[0] + t * (w[0] - v[0]), v[1] + t * (w[1] - v[1])]);\n}\n/**\n * Returns Distance betweeen a point and a line\n *\n * @param {[Number,Number]} p origin Point\n * @param {[Number,Number]} v first line vertice\n * @param {[Number,Number]} w second line vertice\n * @returns {Number} Distance\n */\nfunction distToSegment(p, v, w) {\n  return Math.sqrt(distToSegmentSquared(p, v, w));\n}\n/**\n *\n *\n * @param {[Number, Number][]} poly\n * @returns Number\n */\nfunction getMinDist(poly) {\n  var c = (0, _d.polygonCentroid)(poly);\n  var r = (0, _d.range)(poly.length).map(function (i) {\n    var thisP = poly[i];\n    var nextP = poly[(i + 1) % poly.length];\n    return distToSegment(c, thisP, nextP);\n  });\n  return min(r);\n}\n/**\n *\n *\n * @param {Number} min\n * @param {Number} max\n * @returns number\n */\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; // The maximum is exclusive and the minimum is inclusive\n}\n\n/***/ }),\n\n/***/ 181:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.preload = preload;\nexports.setup = setup;\nexports.draw = draw;\nexports.mousePressed = mousePressed;\n\nvar _pallete = __webpack_require__(532);\n\nvar _pallete2 = _interopRequireDefault(_pallete);\n\nvar _helperFuncs = __webpack_require__(179);\n\nvar _index = __webpack_require__(523);\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _vorManagement = __webpack_require__(534);\n\nvar _vorManagement2 = _interopRequireDefault(_vorManagement);\n\nvar _test = __webpack_require__(533);\n\nvar _test2 = _interopRequireDefault(_test);\n\nvar _d = __webpack_require__(92);\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _bSpline = __webpack_require__(188);\n\nvar _bSpline2 = _interopRequireDefault(_bSpline);\n\n__webpack_require__(526);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/** @type {vorManagement} */\nvar vm = new _vorManagement2.default({\n  width: window.innerWidth,\n  height: window.innerHeight,\n  fillPC: 200\n});\nfunction preload() {}\nfunction setup() {\n  createCanvas(window.innerWidth, window.innerHeight);\n  background((0, _pallete2.default)((0, _helperFuncs.getRandomInt)(0, 12), (0, _helperFuncs.getRandomInt)(2, 5)).hex);\n}\n\nfunction draw() {\n  vm.fSim.restart();\n  vm.fSim.nodes(vm.activePoints);\n  vm.fSim.alphaTarget(0.3);\n  vm.fSim.alpha(0.6);\n  background((0, _pallete2.default)(5, 4).hex);\n  if (vm.activePoints.length > 1) vm.fSim.tick();\n  vm.fillerPoints[vm.fillerPoints.length - 1] = [mouseX + 3, mouseY + 3];\n  vm.regenerateMesh();\n  vm.relaxLikeLloyd();\n  var polygons = vm.outerPolys;\n  vm.activeEdgeGroups.map(function (group) {\n    var splinePoints = [].concat(_toConsumableArray(group), _toConsumableArray(group.slice(0, min(3, group.length))));\n    fill(255, 150);\n    noStroke();\n    beginShape();\n    for (var t = 0; t < 1; t += 0.02) {\n      var p = (0, _bSpline2.default)(t, 3, splinePoints);\n      curveVertex(p[0], p[1]);\n    }\n    endShape(CLOSE);\n  });\n\n  fill((0, _pallete2.default)(5, 3).hex);\n  stroke((0, _pallete2.default)(5, 3).hex);\n\n  strokeWeight(5);\n}\n\nfunction mousePressed() {\n  vm.addActivePoint(mouseX, mouseY, 3, {});\n}\n\n/***/ }),\n\n/***/ 531:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _main = __webpack_require__(181);\n\nvar sketchHooks = _interopRequireWildcard(_main);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n(function (w) {\n  return Object.keys(sketchHooks).forEach(function (hook) {\n    w[hook] = sketchHooks[hook];\n  });\n})(window);\n\n/***/ }),\n\n/***/ 532:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getC;\nvar hues = exports.hues = undefined;\n(function (hues) {\n  hues[hues['cools'] = 0] = 'cools';\n  hues[hues['warms'] = 1] = 'warms';\n  hues[hues['neutrals'] = 2] = 'neutrals';\n  hues[hues['pinks'] = 3] = 'pinks';\n  hues[hues['purples'] = 4] = 'purples';\n  hues[hues['violets'] = 5] = 'violets';\n  hues[hues['blues'] = 6] = 'blues';\n  hues[hues['aquas'] = 7] = 'aquas';\n  hues[hues['greens'] = 8] = 'greens';\n  hues[hues['limes'] = 9] = 'limes';\n  hues[hues['yellows'] = 10] = 'yellows';\n  hues[hues['browns'] = 11] = 'browns';\n  hues[hues['oranges'] = 12] = 'oranges';\n  hues[hues['apricots'] = 13] = 'apricots';\n  hues[hues['reds'] = 14] = 'reds';\n})(hues || (exports.hues = hues = {}));\nvar shades = exports.shades = undefined;\n(function (shades) {\n  shades[shades['black'] = 0] = 'black';\n  shades[shades['dark'] = 1] = 'dark';\n  shades[shades['mediumDark'] = 2] = 'mediumDark';\n  shades[shades['medium'] = 3] = 'medium';\n  shades[shades['mediumLight'] = 4] = 'mediumLight';\n  shades[shades['light'] = 5] = 'light';\n  shades[shades['white'] = 6] = 'white';\n})(shades || (exports.shades = shades = {}));\nvar PalleteArray = [[{\n  red: 0.2117647,\n  alpha: 1,\n  name: 'BigStone',\n  blue: 0.2745098,\n  green: 0.254902,\n  hex: '#364146'\n}, {\n  red: 0.2666667,\n  alpha: 1,\n  name: 'RiverBed',\n  blue: 0.3372549,\n  green: 0.3137255,\n  hex: '#445056'\n}, {\n  red: 0.4666667,\n  alpha: 1,\n  name: 'RegentGray',\n  blue: 0.5333334,\n  green: 0.5137255,\n  hex: '#778388'\n}, {\n  red: 0.6627451,\n  alpha: 1,\n  name: 'Casper',\n  blue: 0.7294118,\n  green: 0.7098039,\n  hex: '#a9b5ba'\n}, {\n  red: 0.07058824,\n  alpha: 1,\n  name: 'Mirage',\n  blue: 0.1372549,\n  green: 0.1176471,\n  hex: '#121e23'\n}, {\n  red: 0.8588235,\n  alpha: 1,\n  name: 'Tranquil',\n  blue: 0.9254902,\n  green: 0.9058824,\n  hex: '#dbe7ec'\n}, {\n  red: 0.8980392,\n  alpha: 1,\n  name: 'AquaSqueeze',\n  blue: 0.9647059,\n  green: 0.945098,\n  hex: '#e5f1f6'\n}], [{\n  red: 0.1529412,\n  alpha: 1,\n  name: 'Oil',\n  blue: 0.08235294,\n  green: 0.1176471,\n  hex: '#271e15'\n}, {\n  red: 0.2941177,\n  alpha: 1,\n  name: 'SpaceShuttle',\n  blue: 0.2235294,\n  green: 0.2627451,\n  hex: '#4b4339'\n}, {\n  red: 0.34902,\n  alpha: 1,\n  name: 'Masala',\n  blue: 0.28235,\n  green: 0.31765,\n  hex: '#595148'\n}, {\n  red: 0.5490196,\n  alpha: 1,\n  name: 'Schooner',\n  blue: 0.4745098,\n  green: 0.5137255,\n  hex: '#8c8379'\n}, {\n  red: 0.7450981,\n  alpha: 1,\n  name: 'Tide',\n  blue: 0.6745098,\n  green: 0.7098039,\n  hex: '#beb5ac'\n}, {\n  red: 0.9411765,\n  alpha: 1,\n  name: 'DesertStorm',\n  blue: 0.8705882,\n  green: 0.9098039,\n  hex: '#f0e8de'\n}, {\n  red: 0.9803922,\n  alpha: 1,\n  name: 'WhiteLinen',\n  blue: 0.9098039,\n  green: 0.9490196,\n  hex: '#faf2e8'\n}], [{\n  red: 0.05882353,\n  alpha: 1,\n  name: 'Onyx',\n  blue: 0.05882353,\n  green: 0.05882353,\n  hex: '#0f0f0f'\n}, {\n  red: 0.2156863,\n  alpha: 1,\n  name: 'Tuatara',\n  blue: 0.2156863,\n  green: 0.2156863,\n  hex: '#373737'\n}, {\n  red: 0.2784314,\n  alpha: 1,\n  name: 'Charcoal',\n  blue: 0.2784314,\n  green: 0.2784314,\n  hex: '#474747'\n}, {\n  red: 0.4980392,\n  alpha: 1,\n  name: 'Tin',\n  blue: 0.4980392,\n  green: 0.4980392,\n  hex: '#7f7f7f'\n}, {\n  red: 0.7176471,\n  alpha: 1,\n  name: 'Loblolly',\n  blue: 0.7176471,\n  green: 0.7176471,\n  hex: '#b7b7b7'\n}, {\n  red: 0.9372549,\n  alpha: 1,\n  name: 'Gallery',\n  blue: 0.9372549,\n  green: 0.9372549,\n  hex: '#efefef'\n}, {\n  red: 0.9803922,\n  alpha: 1,\n  name: 'Alabaster',\n  blue: 0.9803922,\n  green: 0.9803922,\n  hex: '#fafafa'\n}], [{\n  red: 0.6313726,\n  alpha: 1,\n  name: 'RoyalHeath',\n  blue: 0.5058824,\n  green: 0.1960784,\n  hex: '#a13281'\n}, {\n  red: 0.7450981,\n  alpha: 1,\n  name: 'Byzantine',\n  blue: 0.6039216,\n  green: 0.227451,\n  hex: '#be3a9a'\n}, {\n  red: 0.827451,\n  alpha: 1,\n  name: 'DeepFuchsia',\n  blue: 0.6862745,\n  green: 0.3098039,\n  hex: '#d34faf'\n}, {\n  red: 0.9333333,\n  alpha: 1,\n  name: 'NeonFuchsia',\n  blue: 0.7568628,\n  green: 0.2862745,\n  hex: '#ee49c1'\n}, {\n  red: 0.945098,\n  alpha: 1,\n  name: 'RosePink',\n  blue: 0.8039216,\n  green: 0.427451,\n  hex: '#f16dcd'\n}, {\n  red: 0.972549,\n  alpha: 1,\n  name: 'Chantilly',\n  blue: 0.9019608,\n  green: 0.7137255,\n  hex: '#f8b6e6'\n}, {\n  red: 0.9882353,\n  alpha: 1,\n  name: 'PaleRose',\n  blue: 0.9607843,\n  green: 0.8862745,\n  hex: '#fce2f5'\n}], [{\n  red: 0.427451,\n  alpha: 1,\n  name: 'PurpleHeart',\n  blue: 0.6117647,\n  green: 0.2196078,\n  hex: '#6d389c'\n}, {\n  red: 0.5058824,\n  alpha: 1,\n  name: 'Studio',\n  blue: 0.7333333,\n  green: 0.254902,\n  hex: '#8141bb'\n}, {\n  red: 0.5843138,\n  alpha: 1,\n  name: 'Amethyst',\n  blue: 0.8156863,\n  green: 0.3333333,\n  hex: '#9555d0'\n}, {\n  red: 0.6313726,\n  alpha: 1,\n  name: 'LavenderIndigo',\n  blue: 0.9176471,\n  green: 0.3176471,\n  hex: '#a151ea'\n}, {\n  red: 0.7058824,\n  alpha: 1,\n  name: 'SoftPurple',\n  blue: 0.9333333,\n  green: 0.454902,\n  hex: '#b474ee'\n}, {\n  red: 0.8509804,\n  alpha: 1,\n  name: 'Perfume',\n  blue: 0.9686275,\n  green: 0.7254902,\n  hex: '#d9b9f7'\n}, {\n  red: 0.9411765,\n  alpha: 1,\n  name: 'BlueChalk',\n  blue: 0.9882353,\n  green: 0.8901961,\n  hex: '#f0e3fc'\n}], [{\n  red: 0.2392157,\n  alpha: 1,\n  name: 'DarkSlateBlue',\n  blue: 0.5529412,\n  green: 0.2470588,\n  hex: '#3d3f8d'\n}, {\n  red: 0.282353,\n  alpha: 1,\n  name: 'GovernorBay',\n  blue: 0.6627451,\n  green: 0.2901961,\n  hex: '#484aa9'\n}, {\n  red: 0.3607843,\n  alpha: 1,\n  name: 'BlueViolet',\n  blue: 0.7411765,\n  green: 0.372549,\n  hex: '#5c5fbd'\n}, {\n  red: 0.3529412,\n  alpha: 1,\n  name: 'Iris',\n  blue: 0.827451,\n  green: 0.3647059,\n  hex: '#5a5dd3'\n}, {\n  red: 0.4823529,\n  alpha: 1,\n  name: 'ChetwodeBlue',\n  blue: 0.8627451,\n  green: 0.4901961,\n  hex: '#7b7ddc'\n}, {\n  red: 0.7411765,\n  alpha: 1,\n  name: 'Melrose',\n  blue: 0.9294118,\n  green: 0.7450981,\n  hex: '#bdbeed'\n}, {\n  red: 0.8980392,\n  alpha: 1,\n  name: 'Lavender',\n  blue: 0.972549,\n  green: 0.8980392,\n  hex: '#e5e5f8'\n}], [{\n  red: 0.1294118,\n  alpha: 1,\n  name: 'Calypso',\n  blue: 0.5647059,\n  green: 0.4352941,\n  hex: '#216f90'\n}, {\n  red: 0.145098,\n  alpha: 1,\n  name: 'Astral',\n  blue: 0.6705883,\n  green: 0.509804,\n  hex: '#2582ab'\n}, {\n  red: 0.2235294,\n  alpha: 1,\n  name: 'BostonBlue',\n  blue: 0.7529412,\n  green: 0.5921569,\n  hex: '#3997c0'\n}, {\n  red: 0.1803922,\n  alpha: 1,\n  name: 'CuriousBlue',\n  blue: 0.8392157,\n  green: 0.6392157,\n  hex: '#2ea3d6'\n}, {\n  red: 0.345098,\n  alpha: 1,\n  name: 'Malibu',\n  blue: 0.8705882,\n  green: 0.7098039,\n  hex: '#58b5de'\n}, {\n  red: 0.6705883,\n  alpha: 1,\n  name: 'NonPhotoBlue',\n  blue: 0.9372549,\n  green: 0.854902,\n  hex: '#abdaef'\n}, {\n  red: 0.8666667,\n  alpha: 1,\n  name: 'PattensBlue',\n  blue: 0.9764706,\n  green: 0.9411765,\n  hex: '#ddf0f9'\n}], [{\n  red: 0.2078431,\n  alpha: 1,\n  name: 'Viridian',\n  blue: 0.4156863,\n  green: 0.5450981,\n  hex: '#358b6a'\n}, {\n  red: 0.2352941,\n  alpha: 1,\n  name: 'OceanGreen',\n  blue: 0.4784314,\n  green: 0.6392157,\n  hex: '#3ca37a'\n}, {\n  red: 0.3137255,\n  alpha: 1,\n  name: 'Mint',\n  blue: 0.5607843,\n  green: 0.7215686,\n  hex: '#50b88f'\n}, {\n  red: 0.2941177,\n  alpha: 1,\n  name: 'Shamrock',\n  blue: 0.6,\n  green: 0.8,\n  hex: '#4bcc99'\n}, {\n  red: 0.4352941,\n  alpha: 1,\n  name: 'MediumAquamarine',\n  blue: 0.6784314,\n  green: 0.8392157,\n  hex: '#6fd6ad'\n}, {\n  red: 0.7176471,\n  alpha: 1,\n  name: 'WaterLeaf',\n  blue: 0.8392157,\n  green: 0.9215686,\n  hex: '#b7ebd6'\n}, {\n  red: 0.8862745,\n  alpha: 1,\n  name: 'WhiteIce',\n  blue: 0.9372549,\n  green: 0.9686275,\n  hex: '#e2f7ef'\n}], [{\n  red: 0.2941177,\n  alpha: 1,\n  name: 'HippieGreen',\n  blue: 0.2901961,\n  green: 0.5176471,\n  hex: '#4b844a'\n}, {\n  red: 0.3411765,\n  alpha: 1,\n  name: 'FruitSalad',\n  blue: 0.3176471,\n  green: 0.6078432,\n  hex: '#579b51'\n}, {\n  red: 0.4235294,\n  alpha: 1,\n  name: 'Fern',\n  blue: 0.3960784,\n  green: 0.6901961,\n  hex: '#6cb065'\n}, {\n  red: 0.427451,\n  alpha: 1,\n  name: 'Mantis',\n  blue: 0.3960784,\n  green: 0.7607843,\n  hex: '#6dc265'\n}, {\n  red: 0.5411765,\n  alpha: 1,\n  name: 'DeYork',\n  blue: 0.5176471,\n  green: 0.8078431,\n  hex: '#8ace84'\n}, {\n  red: 0.772549,\n  alpha: 1,\n  name: 'GrannyApple',\n  blue: 0.7568628,\n  green: 0.9058824,\n  hex: '#c5e7c1'\n}, {\n  red: 0.9098039,\n  alpha: 1,\n  name: 'AquaSpringCool',\n  blue: 0.9019608,\n  green: 0.9607843,\n  hex: '#e8f5e6'\n}], [{\n  red: 0.4705882,\n  alpha: 1,\n  name: 'Asparagus',\n  blue: 0.2980392,\n  green: 0.5764706,\n  hex: '#78934c'\n}, {\n  red: 0.5529412,\n  alpha: 1,\n  name: 'ChelseaCucumber',\n  blue: 0.3176471,\n  green: 0.6784314,\n  hex: '#8dad51'\n}, {\n  red: 0.6313726,\n  alpha: 1,\n  name: 'Olivine',\n  blue: 0.3960784,\n  green: 0.7568628,\n  hex: '#a1c165'\n}, {\n  red: 0.6901961,\n  alpha: 1,\n  name: 'Conifer',\n  blue: 0.3960784,\n  green: 0.8470588,\n  hex: '#b0d865'\n}, {\n  red: 0.7529412,\n  alpha: 1,\n  name: 'YellowGreen',\n  blue: 0.5176471,\n  green: 0.8784314,\n  hex: '#c0e084'\n}, {\n  red: 0.8745098,\n  alpha: 1,\n  name: 'BerylGreen',\n  blue: 0.7568628,\n  green: 0.9372549,\n  hex: '#dfefc1'\n}, {\n  red: 0.9098039,\n  alpha: 1,\n  name: 'AquaSpringWarm',\n  blue: 0.9019608,\n  green: 0.9607843,\n  hex: '#e8f5e6'\n}], [{\n  red: 0.6352941,\n  alpha: 1,\n  name: 'MuddyWaters',\n  blue: 0.2901961,\n  green: 0.5529412,\n  hex: '#a28d4a'\n}, {\n  red: 0.7450981,\n  alpha: 1,\n  name: 'Sundance',\n  blue: 0.3098039,\n  green: 0.6509804,\n  hex: '#bea64f'\n}, {\n  red: 0.827451,\n  alpha: 1,\n  name: 'Tacha',\n  blue: 0.3921569,\n  green: 0.7333333,\n  hex: '#d3bb64'\n}, {\n  red: 0.9333333,\n  alpha: 1,\n  name: 'GoldenSand',\n  blue: 0.3882353,\n  green: 0.8156863,\n  hex: '#eed063'\n}, {\n  red: 0.945098,\n  alpha: 1,\n  name: 'Buff',\n  blue: 0.509804,\n  green: 0.8509804,\n  hex: '#f1d982'\n}, {\n  red: 0.972549,\n  alpha: 1,\n  name: 'Blond',\n  blue: 0.7568628,\n  green: 0.9254902,\n  hex: '#f8ecc1'\n}, {\n  red: 0.9882353,\n  alpha: 1,\n  name: 'OldLaceGreen',\n  blue: 0.9019608,\n  green: 0.9686275,\n  hex: '#fcf7e6'\n}], [{\n  red: 0.654902,\n  alpha: 1,\n  name: 'Alpine',\n  blue: 0.2588235,\n  green: 0.5058824,\n  hex: '#a78142'\n}, {\n  red: 0.7686275,\n  alpha: 1,\n  name: 'Tussock',\n  blue: 0.2666667,\n  green: 0.5960785,\n  hex: '#c49844'\n}, {\n  red: 0.8470588,\n  alpha: 1,\n  name: 'RobRoy',\n  blue: 0.345098,\n  green: 0.6745098,\n  hex: '#d8ac58'\n}, {\n  red: 0.9607843,\n  alpha: 1,\n  name: 'SaffronMango',\n  blue: 0.3333333,\n  green: 0.7450981,\n  hex: '#f5be55'\n}, {\n  red: 0.9686275,\n  alpha: 1,\n  name: 'Chardonnay',\n  blue: 0.4666667,\n  green: 0.7960784,\n  hex: '#f7cb77'\n}, {\n  red: 0.9843137,\n  alpha: 1,\n  name: 'DairyCream',\n  blue: 0.7333333,\n  green: 0.8980392,\n  hex: '#fbe5bb'\n}, {\n  red: 0.9921569,\n  alpha: 1,\n  name: 'OldLaceYellow',\n  blue: 0.8941177,\n  green: 0.9607843,\n  hex: '#fdf5e4'\n}], [{\n  red: 0.6705883,\n  alpha: 1,\n  name: 'Bourbon',\n  blue: 0.2235294,\n  green: 0.4470588,\n  hex: '#ab7239'\n}, {\n  red: 0.7882353,\n  alpha: 1,\n  name: 'GoldenBell',\n  blue: 0.2235294,\n  green: 0.5254902,\n  hex: '#c98639'\n}, {\n  red: 0.8666667,\n  alpha: 1,\n  name: 'FireBush',\n  blue: 0.3019608,\n  green: 0.6039216,\n  hex: '#dd9a4d'\n}, {\n  red: 0.9843137,\n  alpha: 1,\n  name: 'NeonCarrot',\n  blue: 0.2784314,\n  green: 0.654902,\n  hex: '#fba747'\n}, {\n  red: 0.9882353,\n  alpha: 1,\n  name: 'Rajah',\n  blue: 0.4235294,\n  green: 0.7254902,\n  hex: '#fcb96c'\n}, {\n  red: 0.9921569,\n  alpha: 1,\n  name: 'SandyBeach',\n  blue: 0.7098039,\n  green: 0.8627451,\n  hex: '#fddcb5'\n}, {\n  red: 0.9960784,\n  alpha: 1,\n  name: 'Sazerac',\n  blue: 0.8823529,\n  green: 0.945098,\n  hex: '#fef1e1'\n}], [{\n  red: 0.654902,\n  alpha: 1,\n  name: 'OrangeRoughy',\n  blue: 0.2,\n  green: 0.3176471,\n  hex: '#a75133'\n}, {\n  red: 0.7764706,\n  alpha: 1,\n  name: 'Ecstasy',\n  blue: 0.2117647,\n  green: 0.3686275,\n  hex: '#c65e36'\n}, {\n  red: 0.854902,\n  alpha: 1,\n  name: 'Jaffa',\n  blue: 0.2941177,\n  green: 0.4509804,\n  hex: '#da734b'\n}, {\n  red: 0.9686275,\n  alpha: 1,\n  name: 'OutrageousOrange',\n  blue: 0.2666667,\n  green: 0.4627451,\n  hex: '#f77644'\n}, {\n  red: 0.9764706,\n  alpha: 1,\n  name: 'Salmon',\n  blue: 0.4117647,\n  green: 0.5686275,\n  hex: '#f99169'\n}, {\n  red: 0.9882353,\n  alpha: 1,\n  name: 'Apricot',\n  blue: 0.7058824,\n  green: 0.7843137,\n  hex: '#fcc8b4'\n}, {\n  red: 0.9960784,\n  alpha: 1,\n  name: 'Chablis',\n  blue: 0.8823529,\n  green: 0.9137255,\n  hex: '#fee9e1'\n}], [{\n  red: 0.6431373,\n  alpha: 1,\n  name: 'MilanoRed',\n  blue: 0.1843137,\n  green: 0.1882353,\n  hex: '#a4302f'\n}, {\n  red: 0.7607843,\n  alpha: 1,\n  name: 'Mahogany',\n  blue: 0.2039216,\n  green: 0.2156863,\n  hex: '#c23734'\n}, {\n  red: 0.8392157,\n  alpha: 1,\n  name: 'Valencia',\n  blue: 0.2980392,\n  green: 0.3137255,\n  hex: '#d6504c'\n}, {\n  red: 0.9490196,\n  alpha: 1,\n  name: 'CarminePink',\n  blue: 0.254902,\n  green: 0.2705882,\n  hex: '#f24541'\n}, {\n  red: 0.9607843,\n  alpha: 1,\n  name: 'PastelRed',\n  blue: 0.4039216,\n  green: 0.4156863,\n  hex: '#f56a67'\n}, {\n  red: 0.9803922,\n  alpha: 1,\n  name: 'Sundown',\n  blue: 0.7019608,\n  green: 0.7098039,\n  hex: '#fab5b3'\n}, {\n  red: 0.9921569,\n  alpha: 1,\n  name: 'Pippin',\n  blue: 0.8823529,\n  green: 0.8823529,\n  hex: '#fde1e1'\n}]];\nfunction getC(arg1, arg2) {\n  var hue = void 0;\n  var shad = void 0;\n  if (typeof arg1 === 'string' && arg2 === null) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = PalleteArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var v = _step.value;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = v[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var c = _step2.value;\n\n            if (c.name === arg1) return c;\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    throw new Error(\"can't find colour\");\n  } else if (typeof arg1 === 'number' && arg2 === null) throw 'invalid';\n  if (typeof arg1 === 'number') hue = arg1;\n  if (typeof arg2 === 'number') shad = arg2;\n  if (typeof arg1 === 'string' && arg2 !== null) hue = hues[arg1];\n  if (typeof arg2 === 'string') shad = shades[arg2];\n  try {\n    return PalleteArray[hue][shad];\n  } catch (error) {\n    throw error;\n  }\n}\n\n/***/ }),\n\n/***/ 533:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nfunction add(a, b) {\n    return a + b;\n}\nexports[\"default\"] = add;\n\n/***/ }),\n\n/***/ 534:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _d = __webpack_require__(92);\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _helperFuncs = __webpack_require__(179);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n *\n *\n * @export\n * @class VorManagement\n */\nvar VorManagement = function () {\n  /**\n   *Creates an instance of VorManagement.\n   * @param {*} opts\n   * @memberof VorManagement\n   */\n  function VorManagement(opts) {\n    var _this = this;\n\n    _classCallCheck(this, VorManagement);\n\n    this.updatePolygons = function () {\n      _this.relaxLikeLloyd();\n      _this.regenerateMesh();\n      return _this.outerPolys;\n    };\n    this.width = opts.width;\n    this.height = opts.height;\n    this.fillPC = opts.fillPC;\n    this.exisDA = opts.exisDA || undefined;\n    this.activePoints = [];\n    this.boundryPoints = [];\n    this.fillerPoints = [];\n    this.innerPolys = [];\n    this.outerPolys = [];\n    this.activeEdgeGroups = [];\n    this.fSim = d3.forceSimulation(this.activePoints);\n    this.fSim.alphaDecay(0.1);\n    this.fSim.alphaTarget(0.3);\n    this.fSim.velocityDecay(0.6);\n    this.fSim.force('repel', d3.forceManyBody().strength(-50).distanceMax(100));\n    var fr = d3.forceManyBody().strength(50).distanceMin(30);\n    this.fSim.force('charge', fr);\n    var xForce = d3.forceX().x(function (d) {\n      return d.cx;\n    }).strength(0.1);\n    this.fSim.force('xforce', xForce);\n    this.fSim.force('yforce', d3.forceY().y(function (d) {\n      return d.cy;\n    }).strength(0.1));\n    this.fSim.stop();\n    this.fSim.alphaTarget(0.05);\n    // Create begining graphs\n    this.innerMap = d3.voronoi().size([this.width, this.height]);\n    this.outerMap = this.innerMap.extent([[-50, -50], [this.width + 50, this.height + 50]]);\n    this.generateRandMesh();\n  }\n  /** Generates a seed random mesh */\n\n\n  _createClass(VorManagement, [{\n    key: 'generateRandMesh',\n    value: function generateRandMesh() {\n      var graph = this;\n      this.fillerPoints = d3.range(this.fillPC).map(function () {\n        var point = {\n          0: Math.random() * graph.width,\n          1: Math.random() * graph.height,\n          class: 0,\n          filler: true\n        };\n        return point;\n      });\n      this.boundryPoints = this.generateBoundryPoints(this.width, this.height, 20);\n      this.activePoints = [];\n      this.regenerateMesh();\n    }\n  }, {\n    key: 'generateBoundryPoints',\n    value: function generateBoundryPoints(width, height, offset) {\n      var output = [];\n      var xCount = Math.floor(width / offset);\n      d3.range(xCount + 2).map(function (i) {\n        output.push({\n          0: i / xCount * width,\n          1: height + 50,\n          class: 1\n        });\n      });\n      d3.range(xCount + 2).map(function (i) {\n        output.push({\n          0: i / xCount * width,\n          1: 0 - 50,\n          class: 1\n        });\n      });\n      var yCount = Math.floor(height / offset);\n      d3.range(yCount + 2).map(function (i) {\n        output.push({\n          0: width + 50,\n          1: i / yCount * height,\n          class: 1\n        });\n      });\n      d3.range(yCount + 2).map(function (i) {\n        output.push({\n          0: 0 - 50,\n          1: i / yCount * height,\n          class: 1\n        });\n      });\n      return output;\n    }\n  }, {\n    key: 'getActiveEdges',\n    value: function getActiveEdges() {\n      var _this2 = this;\n\n      this.activeEdgeGroups = [];\n      var aEdges = [];\n      if (this.activePoints.length <= 1) return;\n      this.outerMesh.edges.map(function (edge) {\n        if (!edge.left || !edge.right) return;\n\n        var leftIs = _this2.activePoints.includes(edge.left.data);\n        var rightIs = _this2.activePoints.includes(edge.right.data);\n        if (leftIs ? !rightIs : rightIs) {\n          if (!aEdges.includes(edge[0])) {\n            aEdges.push(edge[0]);\n            edge[0].n = [];\n            edge[0].n.push(edge[1]);\n          } else if (!edge[0].n.includes(edge[1])) edge[0].n.push(edge[1]);\n          if (!aEdges.includes(edge[1])) {\n            aEdges.push(edge[1]);\n            edge[1].n = [];\n            edge[1].n.push(edge[0]);\n          } else if (!edge[1].n.includes(edge[0])) edge[1].n.push(edge[0]);\n        }\n      });\n      var fakeOutCount = 0;\n\n      var _loop = function _loop() {\n        var outputGroup = [];\n        var sortP = function sortP(point, out) {\n          out.push(point);\n          if (!out.includes(point.n[0])) sortP(point.n[0], out);\n          if (!out.includes(point.n[1])) sortP(point.n[1], out);\n        };\n        sortP(aEdges[0], outputGroup);\n        _this2.activeEdgeGroups.push(outputGroup);\n        outputGroup.map(function (point) {\n          aEdges.splice(aEdges.indexOf(point), 1);\n        });\n        fakeOutCount++;\n      };\n\n      while (aEdges.length > 1 && fakeOutCount < 12) {\n        _loop();\n      }\n      console.log(this.activeEdgeGroups);\n    }\n  }, {\n    key: 'regenerateMesh',\n    value: function regenerateMesh() {\n      // @ts-ignore\n      this.innerMesh = this.innerMap(this.activePoints.concat(this.fillerPoints));\n      this.outerMesh = this.outerMap(\n      // @ts-ignore\n      this.activePoints.concat(this.fillerPoints, this.boundryPoints));\n      this.innerPolys = this.innerMesh.polygons();\n      this.outerPolys = this.outerMesh.polygons();\n      this.getActiveEdges();\n    }\n  }, {\n    key: 'relaxLikeLloyd',\n    value: function relaxLikeLloyd() {\n      var _this3 = this;\n\n      this.activePoints.map(function (p, i) {\n        var centroid = d3.polygonCentroid(_this3.innerPolys[i]);\n        p.cx = centroid[0];\n        p.cy = centroid[1];\n        p[0] = (p[0] + p.x) / 2;\n        p[1] = (p[1] + p.y) / 2;\n      });\n      this.fillerPoints.map(function (p, i) {\n        var centroid = d3.polygonCentroid(_this3.innerPolys[i + _this3.activePoints.length]);\n        p[0] = centroid[0];\n        p[1] = centroid[1];\n      });\n    }\n  }, {\n    key: 'addActivePoint',\n    value: function addActivePoint(x, y, cl, dat) {\n      this.activePoints.push({\n        0: x,\n        1: y,\n        class: cl,\n        x: x,\n        y: y,\n        cx: x,\n        cy: y,\n        id: (0, _helperFuncs.hash)(Math.random() * 100)\n      });\n      this.fSim.nodes(this.activePoints);\n      this.getActiveEdges();\n    }\n  }]);\n\n  return VorManagement;\n}();\n\nexports.default = VorManagement;\n\n/***/ })\n\n},[531]);\n\n\n// WEBPACK FOOTER //\n// bundle.e746cc521ddb74b32979.js","// @ts-check\n\n/* eslint no-unused-vars: 0 */\nimport { polygonCentroid, range } from 'd3';\nif ( !Object.entries ) {\n  Object.entries = function( obj ) {\n    let ownProps = Object.keys( obj );\n    let i = ownProps.length;\n    let resArray = new Array( i ); // preallocate the Array\n    while ( i-- ) resArray[i] = [ownProps[i], obj[ownProps[i]]];\n    return resArray;\n  };\n}\nexport function hash( s ) {\n  /* Simple hash function. */\n  let a = 1;\n  let c = 0;\n  let h;\n  let o;\n  if ( s ) {\n    a = 0;\n    /* jshint plusplus:false bitwise:false */\n    for ( h = s.length - 1; h >= 0; h-- ) {\n      o = s.charCodeAt( h );\n      a = ( ( a << 6 ) & 268435455 ) + o + ( o << 14 );\n      c = a & 266338304;\n      a = c !== 0 ? a ^ ( c >> 21 ) : a;\n    }\n  }\n  return a.toString( 16 ).toUpperCase();\n}\n/**\n * Checks to See if Object contains\n *\n * @param {...any} obj object to see\n * @returns {Boolean} isNested\n */\nexport function checkNested( obj /*, level1, level2, ... levelN */ ) {\n  var args = Array.prototype.slice.call( arguments, 1 );\n  for ( var i = 0; i < args.length; i++ ) {\n    if ( !obj || !obj.hasOwnProperty( args[i] ) ) {\n      return false;\n    }\n    obj = obj[args[i]];\n  }\n  return true;\n}\nvar recorder;\nvar canvasObject;\nvar lastFrame = 60;\n\n// For Recording\n\n/**\n * Adds A frame to the recording and saves if at end\n *\n */\nexport function recordFrame() {\n  if ( frameCount <= lastFrame ) {\n    recorder.capture( canvasObject );\n    if ( frameCount === lastFrame ) {\n      recorder.stop();\n      recorder.save();\n    }\n  }\n}\n/**\n * Set's up Recording\n *\n */\nexport function recordSetup() {\n  recorder = new CCapture( {\n    format: 'webm',\n    framerate: 60\n  } );\n  canvasObject = document.getElementById( 'defaultCanvas0' );\n  recorder.start();\n}\nfunction sqr( x ) {\n  return x * x;\n}\nfunction dist2( v, w ) {\n  return sqr( v[0] - w[0] ) + sqr( v[1] - w[1] );\n}\nfunction distToSegmentSquared( p, v, w ) {\n  var l2 = dist2( v, w );\n  if ( l2 === 0 ) return dist2( p, v );\n  var t = ( ( p.x - v[0] ) * ( w[0] - v[0] ) + ( p.y - v[1] ) * ( w[1] - v[1] ) ) / l2;\n  t = Math.max( 0, Math.min( 1, t ) );\n  return dist2( p, [v[0] + t * ( w[0] - v[0] ), v[1] + t * ( w[1] - v[1] )] );\n}\n/**\n * Returns Distance betweeen a point and a line\n *\n * @param {[Number,Number]} p origin Point\n * @param {[Number,Number]} v first line vertice\n * @param {[Number,Number]} w second line vertice\n * @returns {Number} Distance\n */\nexport function distToSegment( p, v, w ) {\n  return Math.sqrt( distToSegmentSquared( p, v, w ) );\n}\n/**\n *\n *\n * @param {[Number, Number][]} poly\n * @returns Number\n */\nfunction getMinDist( poly ) {\n  let c = polygonCentroid( poly );\n  let r = range( poly.length ).map( i => {\n    let thisP = poly[i];\n    let nextP = poly[( i + 1 ) % poly.length];\n    return distToSegment( c, thisP, nextP );\n  } );\n  return min( r );\n}\n/**\n *\n *\n * @param {Number} min\n * @param {Number} max\n * @returns number\n */\nexport function getRandomInt( min, max ) {\n  min = Math.ceil( min );\n  max = Math.floor( max );\n  return Math.floor( Math.random() * ( max - min ) ) + min; // The maximum is exclusive and the minimum is inclusive\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketch/helperFuncs.js","import getC from './pallete';\nimport { getRandomInt } from './helperFuncs';\nimport firebase from '../../node_modules/firebase/index';\nimport vorManagement from './vorManagement';\nimport add from './test';\nimport * as d3 from 'd3';\nimport bSpline from 'b-spline';\nimport 'lodash';\n\n/** @type {vorManagement} */\nlet vm = new vorManagement( {\n  width: window.innerWidth,\n  height: window.innerHeight,\n  fillPC: 200\n} );\nexport function preload() {}\nexport function setup() {\n  createCanvas( window.innerWidth, window.innerHeight );\n  background( getC( getRandomInt( 0, 12 ), getRandomInt( 2, 5 ) ).hex );\n}\n\nexport function draw() {\n  vm.fSim.restart();\n  vm.fSim.nodes( vm.activePoints );\n  vm.fSim.alphaTarget( 0.3 );\n  vm.fSim.alpha( 0.6 );\n  background( getC( 5, 4 ).hex );\n  if ( vm.activePoints.length > 1 ) vm.fSim.tick();\n  vm.fillerPoints[vm.fillerPoints.length - 1] = [mouseX + 3, mouseY + 3];\n  vm.regenerateMesh();\n  vm.relaxLikeLloyd();\n  let polygons = vm.outerPolys;\n  vm.activeEdgeGroups.map( group => {\n    let splinePoints = [...group, ...group.slice( 0, min( 3, group.length ) )];\n    fill( 255, 150 );\n    noStroke();\n    beginShape();\n    for ( let t = 0; t < 1; t += 0.02 ) {\n      let p = bSpline( t, 3, splinePoints );\n      curveVertex( p[0], p[1] );\n    }\n    endShape( CLOSE );\n  } );\n\n  fill( getC( 5, 3 ).hex );\n  stroke( getC( 5, 3 ).hex );\n\n  strokeWeight( 5 );\n}\n\nexport function mousePressed() {\n  vm.addActivePoint( mouseX, mouseY, 3, {} );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketch/main.js","import * as sketchHooks from './sketch/main';\n( w =>\n  Object.keys( sketchHooks ).forEach( hook => {\n    w[hook] = sketchHooks[hook];\n  } ) )( window );\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","export var hues;\n( function( hues ) {\n  hues[( hues['cools'] = 0 )] = 'cools';\n  hues[( hues['warms'] = 1 )] = 'warms';\n  hues[( hues['neutrals'] = 2 )] = 'neutrals';\n  hues[( hues['pinks'] = 3 )] = 'pinks';\n  hues[( hues['purples'] = 4 )] = 'purples';\n  hues[( hues['violets'] = 5 )] = 'violets';\n  hues[( hues['blues'] = 6 )] = 'blues';\n  hues[( hues['aquas'] = 7 )] = 'aquas';\n  hues[( hues['greens'] = 8 )] = 'greens';\n  hues[( hues['limes'] = 9 )] = 'limes';\n  hues[( hues['yellows'] = 10 )] = 'yellows';\n  hues[( hues['browns'] = 11 )] = 'browns';\n  hues[( hues['oranges'] = 12 )] = 'oranges';\n  hues[( hues['apricots'] = 13 )] = 'apricots';\n  hues[( hues['reds'] = 14 )] = 'reds';\n} )( hues || ( hues = {} ) );\nexport var shades;\n( function( shades ) {\n  shades[( shades['black'] = 0 )] = 'black';\n  shades[( shades['dark'] = 1 )] = 'dark';\n  shades[( shades['mediumDark'] = 2 )] = 'mediumDark';\n  shades[( shades['medium'] = 3 )] = 'medium';\n  shades[( shades['mediumLight'] = 4 )] = 'mediumLight';\n  shades[( shades['light'] = 5 )] = 'light';\n  shades[( shades['white'] = 6 )] = 'white';\n} )( shades || ( shades = {} ) );\nconst PalleteArray = [\n  [\n    {\n      red: 0.2117647,\n      alpha: 1,\n      name: 'BigStone',\n      blue: 0.2745098,\n      green: 0.254902,\n      hex: '#364146'\n    },\n    {\n      red: 0.2666667,\n      alpha: 1,\n      name: 'RiverBed',\n      blue: 0.3372549,\n      green: 0.3137255,\n      hex: '#445056'\n    },\n    {\n      red: 0.4666667,\n      alpha: 1,\n      name: 'RegentGray',\n      blue: 0.5333334,\n      green: 0.5137255,\n      hex: '#778388'\n    },\n    {\n      red: 0.6627451,\n      alpha: 1,\n      name: 'Casper',\n      blue: 0.7294118,\n      green: 0.7098039,\n      hex: '#a9b5ba'\n    },\n    {\n      red: 0.07058824,\n      alpha: 1,\n      name: 'Mirage',\n      blue: 0.1372549,\n      green: 0.1176471,\n      hex: '#121e23'\n    },\n    {\n      red: 0.8588235,\n      alpha: 1,\n      name: 'Tranquil',\n      blue: 0.9254902,\n      green: 0.9058824,\n      hex: '#dbe7ec'\n    },\n    {\n      red: 0.8980392,\n      alpha: 1,\n      name: 'AquaSqueeze',\n      blue: 0.9647059,\n      green: 0.945098,\n      hex: '#e5f1f6'\n    }\n  ],\n  [\n    {\n      red: 0.1529412,\n      alpha: 1,\n      name: 'Oil',\n      blue: 0.08235294,\n      green: 0.1176471,\n      hex: '#271e15'\n    },\n    {\n      red: 0.2941177,\n      alpha: 1,\n      name: 'SpaceShuttle',\n      blue: 0.2235294,\n      green: 0.2627451,\n      hex: '#4b4339'\n    },\n    {\n      red: 0.34902,\n      alpha: 1,\n      name: 'Masala',\n      blue: 0.28235,\n      green: 0.31765,\n      hex: '#595148'\n    },\n    {\n      red: 0.5490196,\n      alpha: 1,\n      name: 'Schooner',\n      blue: 0.4745098,\n      green: 0.5137255,\n      hex: '#8c8379'\n    },\n    {\n      red: 0.7450981,\n      alpha: 1,\n      name: 'Tide',\n      blue: 0.6745098,\n      green: 0.7098039,\n      hex: '#beb5ac'\n    },\n    {\n      red: 0.9411765,\n      alpha: 1,\n      name: 'DesertStorm',\n      blue: 0.8705882,\n      green: 0.9098039,\n      hex: '#f0e8de'\n    },\n    {\n      red: 0.9803922,\n      alpha: 1,\n      name: 'WhiteLinen',\n      blue: 0.9098039,\n      green: 0.9490196,\n      hex: '#faf2e8'\n    }\n  ],\n  [\n    {\n      red: 0.05882353,\n      alpha: 1,\n      name: 'Onyx',\n      blue: 0.05882353,\n      green: 0.05882353,\n      hex: '#0f0f0f'\n    },\n    {\n      red: 0.2156863,\n      alpha: 1,\n      name: 'Tuatara',\n      blue: 0.2156863,\n      green: 0.2156863,\n      hex: '#373737'\n    },\n    {\n      red: 0.2784314,\n      alpha: 1,\n      name: 'Charcoal',\n      blue: 0.2784314,\n      green: 0.2784314,\n      hex: '#474747'\n    },\n    {\n      red: 0.4980392,\n      alpha: 1,\n      name: 'Tin',\n      blue: 0.4980392,\n      green: 0.4980392,\n      hex: '#7f7f7f'\n    },\n    {\n      red: 0.7176471,\n      alpha: 1,\n      name: 'Loblolly',\n      blue: 0.7176471,\n      green: 0.7176471,\n      hex: '#b7b7b7'\n    },\n    {\n      red: 0.9372549,\n      alpha: 1,\n      name: 'Gallery',\n      blue: 0.9372549,\n      green: 0.9372549,\n      hex: '#efefef'\n    },\n    {\n      red: 0.9803922,\n      alpha: 1,\n      name: 'Alabaster',\n      blue: 0.9803922,\n      green: 0.9803922,\n      hex: '#fafafa'\n    }\n  ],\n  [\n    {\n      red: 0.6313726,\n      alpha: 1,\n      name: 'RoyalHeath',\n      blue: 0.5058824,\n      green: 0.1960784,\n      hex: '#a13281'\n    },\n    {\n      red: 0.7450981,\n      alpha: 1,\n      name: 'Byzantine',\n      blue: 0.6039216,\n      green: 0.227451,\n      hex: '#be3a9a'\n    },\n    {\n      red: 0.827451,\n      alpha: 1,\n      name: 'DeepFuchsia',\n      blue: 0.6862745,\n      green: 0.3098039,\n      hex: '#d34faf'\n    },\n    {\n      red: 0.9333333,\n      alpha: 1,\n      name: 'NeonFuchsia',\n      blue: 0.7568628,\n      green: 0.2862745,\n      hex: '#ee49c1'\n    },\n    {\n      red: 0.945098,\n      alpha: 1,\n      name: 'RosePink',\n      blue: 0.8039216,\n      green: 0.427451,\n      hex: '#f16dcd'\n    },\n    {\n      red: 0.972549,\n      alpha: 1,\n      name: 'Chantilly',\n      blue: 0.9019608,\n      green: 0.7137255,\n      hex: '#f8b6e6'\n    },\n    {\n      red: 0.9882353,\n      alpha: 1,\n      name: 'PaleRose',\n      blue: 0.9607843,\n      green: 0.8862745,\n      hex: '#fce2f5'\n    }\n  ],\n  [\n    {\n      red: 0.427451,\n      alpha: 1,\n      name: 'PurpleHeart',\n      blue: 0.6117647,\n      green: 0.2196078,\n      hex: '#6d389c'\n    },\n    {\n      red: 0.5058824,\n      alpha: 1,\n      name: 'Studio',\n      blue: 0.7333333,\n      green: 0.254902,\n      hex: '#8141bb'\n    },\n    {\n      red: 0.5843138,\n      alpha: 1,\n      name: 'Amethyst',\n      blue: 0.8156863,\n      green: 0.3333333,\n      hex: '#9555d0'\n    },\n    {\n      red: 0.6313726,\n      alpha: 1,\n      name: 'LavenderIndigo',\n      blue: 0.9176471,\n      green: 0.3176471,\n      hex: '#a151ea'\n    },\n    {\n      red: 0.7058824,\n      alpha: 1,\n      name: 'SoftPurple',\n      blue: 0.9333333,\n      green: 0.454902,\n      hex: '#b474ee'\n    },\n    {\n      red: 0.8509804,\n      alpha: 1,\n      name: 'Perfume',\n      blue: 0.9686275,\n      green: 0.7254902,\n      hex: '#d9b9f7'\n    },\n    {\n      red: 0.9411765,\n      alpha: 1,\n      name: 'BlueChalk',\n      blue: 0.9882353,\n      green: 0.8901961,\n      hex: '#f0e3fc'\n    }\n  ],\n  [\n    {\n      red: 0.2392157,\n      alpha: 1,\n      name: 'DarkSlateBlue',\n      blue: 0.5529412,\n      green: 0.2470588,\n      hex: '#3d3f8d'\n    },\n    {\n      red: 0.282353,\n      alpha: 1,\n      name: 'GovernorBay',\n      blue: 0.6627451,\n      green: 0.2901961,\n      hex: '#484aa9'\n    },\n    {\n      red: 0.3607843,\n      alpha: 1,\n      name: 'BlueViolet',\n      blue: 0.7411765,\n      green: 0.372549,\n      hex: '#5c5fbd'\n    },\n    {\n      red: 0.3529412,\n      alpha: 1,\n      name: 'Iris',\n      blue: 0.827451,\n      green: 0.3647059,\n      hex: '#5a5dd3'\n    },\n    {\n      red: 0.4823529,\n      alpha: 1,\n      name: 'ChetwodeBlue',\n      blue: 0.8627451,\n      green: 0.4901961,\n      hex: '#7b7ddc'\n    },\n    {\n      red: 0.7411765,\n      alpha: 1,\n      name: 'Melrose',\n      blue: 0.9294118,\n      green: 0.7450981,\n      hex: '#bdbeed'\n    },\n    {\n      red: 0.8980392,\n      alpha: 1,\n      name: 'Lavender',\n      blue: 0.972549,\n      green: 0.8980392,\n      hex: '#e5e5f8'\n    }\n  ],\n  [\n    {\n      red: 0.1294118,\n      alpha: 1,\n      name: 'Calypso',\n      blue: 0.5647059,\n      green: 0.4352941,\n      hex: '#216f90'\n    },\n    {\n      red: 0.145098,\n      alpha: 1,\n      name: 'Astral',\n      blue: 0.6705883,\n      green: 0.509804,\n      hex: '#2582ab'\n    },\n    {\n      red: 0.2235294,\n      alpha: 1,\n      name: 'BostonBlue',\n      blue: 0.7529412,\n      green: 0.5921569,\n      hex: '#3997c0'\n    },\n    {\n      red: 0.1803922,\n      alpha: 1,\n      name: 'CuriousBlue',\n      blue: 0.8392157,\n      green: 0.6392157,\n      hex: '#2ea3d6'\n    },\n    {\n      red: 0.345098,\n      alpha: 1,\n      name: 'Malibu',\n      blue: 0.8705882,\n      green: 0.7098039,\n      hex: '#58b5de'\n    },\n    {\n      red: 0.6705883,\n      alpha: 1,\n      name: 'NonPhotoBlue',\n      blue: 0.9372549,\n      green: 0.854902,\n      hex: '#abdaef'\n    },\n    {\n      red: 0.8666667,\n      alpha: 1,\n      name: 'PattensBlue',\n      blue: 0.9764706,\n      green: 0.9411765,\n      hex: '#ddf0f9'\n    }\n  ],\n  [\n    {\n      red: 0.2078431,\n      alpha: 1,\n      name: 'Viridian',\n      blue: 0.4156863,\n      green: 0.5450981,\n      hex: '#358b6a'\n    },\n    {\n      red: 0.2352941,\n      alpha: 1,\n      name: 'OceanGreen',\n      blue: 0.4784314,\n      green: 0.6392157,\n      hex: '#3ca37a'\n    },\n    {\n      red: 0.3137255,\n      alpha: 1,\n      name: 'Mint',\n      blue: 0.5607843,\n      green: 0.7215686,\n      hex: '#50b88f'\n    },\n    {\n      red: 0.2941177,\n      alpha: 1,\n      name: 'Shamrock',\n      blue: 0.6,\n      green: 0.8,\n      hex: '#4bcc99'\n    },\n    {\n      red: 0.4352941,\n      alpha: 1,\n      name: 'MediumAquamarine',\n      blue: 0.6784314,\n      green: 0.8392157,\n      hex: '#6fd6ad'\n    },\n    {\n      red: 0.7176471,\n      alpha: 1,\n      name: 'WaterLeaf',\n      blue: 0.8392157,\n      green: 0.9215686,\n      hex: '#b7ebd6'\n    },\n    {\n      red: 0.8862745,\n      alpha: 1,\n      name: 'WhiteIce',\n      blue: 0.9372549,\n      green: 0.9686275,\n      hex: '#e2f7ef'\n    }\n  ],\n  [\n    {\n      red: 0.2941177,\n      alpha: 1,\n      name: 'HippieGreen',\n      blue: 0.2901961,\n      green: 0.5176471,\n      hex: '#4b844a'\n    },\n    {\n      red: 0.3411765,\n      alpha: 1,\n      name: 'FruitSalad',\n      blue: 0.3176471,\n      green: 0.6078432,\n      hex: '#579b51'\n    },\n    {\n      red: 0.4235294,\n      alpha: 1,\n      name: 'Fern',\n      blue: 0.3960784,\n      green: 0.6901961,\n      hex: '#6cb065'\n    },\n    {\n      red: 0.427451,\n      alpha: 1,\n      name: 'Mantis',\n      blue: 0.3960784,\n      green: 0.7607843,\n      hex: '#6dc265'\n    },\n    {\n      red: 0.5411765,\n      alpha: 1,\n      name: 'DeYork',\n      blue: 0.5176471,\n      green: 0.8078431,\n      hex: '#8ace84'\n    },\n    {\n      red: 0.772549,\n      alpha: 1,\n      name: 'GrannyApple',\n      blue: 0.7568628,\n      green: 0.9058824,\n      hex: '#c5e7c1'\n    },\n    {\n      red: 0.9098039,\n      alpha: 1,\n      name: 'AquaSpringCool',\n      blue: 0.9019608,\n      green: 0.9607843,\n      hex: '#e8f5e6'\n    }\n  ],\n  [\n    {\n      red: 0.4705882,\n      alpha: 1,\n      name: 'Asparagus',\n      blue: 0.2980392,\n      green: 0.5764706,\n      hex: '#78934c'\n    },\n    {\n      red: 0.5529412,\n      alpha: 1,\n      name: 'ChelseaCucumber',\n      blue: 0.3176471,\n      green: 0.6784314,\n      hex: '#8dad51'\n    },\n    {\n      red: 0.6313726,\n      alpha: 1,\n      name: 'Olivine',\n      blue: 0.3960784,\n      green: 0.7568628,\n      hex: '#a1c165'\n    },\n    {\n      red: 0.6901961,\n      alpha: 1,\n      name: 'Conifer',\n      blue: 0.3960784,\n      green: 0.8470588,\n      hex: '#b0d865'\n    },\n    {\n      red: 0.7529412,\n      alpha: 1,\n      name: 'YellowGreen',\n      blue: 0.5176471,\n      green: 0.8784314,\n      hex: '#c0e084'\n    },\n    {\n      red: 0.8745098,\n      alpha: 1,\n      name: 'BerylGreen',\n      blue: 0.7568628,\n      green: 0.9372549,\n      hex: '#dfefc1'\n    },\n    {\n      red: 0.9098039,\n      alpha: 1,\n      name: 'AquaSpringWarm',\n      blue: 0.9019608,\n      green: 0.9607843,\n      hex: '#e8f5e6'\n    }\n  ],\n  [\n    {\n      red: 0.6352941,\n      alpha: 1,\n      name: 'MuddyWaters',\n      blue: 0.2901961,\n      green: 0.5529412,\n      hex: '#a28d4a'\n    },\n    {\n      red: 0.7450981,\n      alpha: 1,\n      name: 'Sundance',\n      blue: 0.3098039,\n      green: 0.6509804,\n      hex: '#bea64f'\n    },\n    {\n      red: 0.827451,\n      alpha: 1,\n      name: 'Tacha',\n      blue: 0.3921569,\n      green: 0.7333333,\n      hex: '#d3bb64'\n    },\n    {\n      red: 0.9333333,\n      alpha: 1,\n      name: 'GoldenSand',\n      blue: 0.3882353,\n      green: 0.8156863,\n      hex: '#eed063'\n    },\n    {\n      red: 0.945098,\n      alpha: 1,\n      name: 'Buff',\n      blue: 0.509804,\n      green: 0.8509804,\n      hex: '#f1d982'\n    },\n    {\n      red: 0.972549,\n      alpha: 1,\n      name: 'Blond',\n      blue: 0.7568628,\n      green: 0.9254902,\n      hex: '#f8ecc1'\n    },\n    {\n      red: 0.9882353,\n      alpha: 1,\n      name: 'OldLaceGreen',\n      blue: 0.9019608,\n      green: 0.9686275,\n      hex: '#fcf7e6'\n    }\n  ],\n  [\n    {\n      red: 0.654902,\n      alpha: 1,\n      name: 'Alpine',\n      blue: 0.2588235,\n      green: 0.5058824,\n      hex: '#a78142'\n    },\n    {\n      red: 0.7686275,\n      alpha: 1,\n      name: 'Tussock',\n      blue: 0.2666667,\n      green: 0.5960785,\n      hex: '#c49844'\n    },\n    {\n      red: 0.8470588,\n      alpha: 1,\n      name: 'RobRoy',\n      blue: 0.345098,\n      green: 0.6745098,\n      hex: '#d8ac58'\n    },\n    {\n      red: 0.9607843,\n      alpha: 1,\n      name: 'SaffronMango',\n      blue: 0.3333333,\n      green: 0.7450981,\n      hex: '#f5be55'\n    },\n    {\n      red: 0.9686275,\n      alpha: 1,\n      name: 'Chardonnay',\n      blue: 0.4666667,\n      green: 0.7960784,\n      hex: '#f7cb77'\n    },\n    {\n      red: 0.9843137,\n      alpha: 1,\n      name: 'DairyCream',\n      blue: 0.7333333,\n      green: 0.8980392,\n      hex: '#fbe5bb'\n    },\n    {\n      red: 0.9921569,\n      alpha: 1,\n      name: 'OldLaceYellow',\n      blue: 0.8941177,\n      green: 0.9607843,\n      hex: '#fdf5e4'\n    }\n  ],\n  [\n    {\n      red: 0.6705883,\n      alpha: 1,\n      name: 'Bourbon',\n      blue: 0.2235294,\n      green: 0.4470588,\n      hex: '#ab7239'\n    },\n    {\n      red: 0.7882353,\n      alpha: 1,\n      name: 'GoldenBell',\n      blue: 0.2235294,\n      green: 0.5254902,\n      hex: '#c98639'\n    },\n    {\n      red: 0.8666667,\n      alpha: 1,\n      name: 'FireBush',\n      blue: 0.3019608,\n      green: 0.6039216,\n      hex: '#dd9a4d'\n    },\n    {\n      red: 0.9843137,\n      alpha: 1,\n      name: 'NeonCarrot',\n      blue: 0.2784314,\n      green: 0.654902,\n      hex: '#fba747'\n    },\n    {\n      red: 0.9882353,\n      alpha: 1,\n      name: 'Rajah',\n      blue: 0.4235294,\n      green: 0.7254902,\n      hex: '#fcb96c'\n    },\n    {\n      red: 0.9921569,\n      alpha: 1,\n      name: 'SandyBeach',\n      blue: 0.7098039,\n      green: 0.8627451,\n      hex: '#fddcb5'\n    },\n    {\n      red: 0.9960784,\n      alpha: 1,\n      name: 'Sazerac',\n      blue: 0.8823529,\n      green: 0.945098,\n      hex: '#fef1e1'\n    }\n  ],\n  [\n    {\n      red: 0.654902,\n      alpha: 1,\n      name: 'OrangeRoughy',\n      blue: 0.2,\n      green: 0.3176471,\n      hex: '#a75133'\n    },\n    {\n      red: 0.7764706,\n      alpha: 1,\n      name: 'Ecstasy',\n      blue: 0.2117647,\n      green: 0.3686275,\n      hex: '#c65e36'\n    },\n    {\n      red: 0.854902,\n      alpha: 1,\n      name: 'Jaffa',\n      blue: 0.2941177,\n      green: 0.4509804,\n      hex: '#da734b'\n    },\n    {\n      red: 0.9686275,\n      alpha: 1,\n      name: 'OutrageousOrange',\n      blue: 0.2666667,\n      green: 0.4627451,\n      hex: '#f77644'\n    },\n    {\n      red: 0.9764706,\n      alpha: 1,\n      name: 'Salmon',\n      blue: 0.4117647,\n      green: 0.5686275,\n      hex: '#f99169'\n    },\n    {\n      red: 0.9882353,\n      alpha: 1,\n      name: 'Apricot',\n      blue: 0.7058824,\n      green: 0.7843137,\n      hex: '#fcc8b4'\n    },\n    {\n      red: 0.9960784,\n      alpha: 1,\n      name: 'Chablis',\n      blue: 0.8823529,\n      green: 0.9137255,\n      hex: '#fee9e1'\n    }\n  ],\n  [\n    {\n      red: 0.6431373,\n      alpha: 1,\n      name: 'MilanoRed',\n      blue: 0.1843137,\n      green: 0.1882353,\n      hex: '#a4302f'\n    },\n    {\n      red: 0.7607843,\n      alpha: 1,\n      name: 'Mahogany',\n      blue: 0.2039216,\n      green: 0.2156863,\n      hex: '#c23734'\n    },\n    {\n      red: 0.8392157,\n      alpha: 1,\n      name: 'Valencia',\n      blue: 0.2980392,\n      green: 0.3137255,\n      hex: '#d6504c'\n    },\n    {\n      red: 0.9490196,\n      alpha: 1,\n      name: 'CarminePink',\n      blue: 0.254902,\n      green: 0.2705882,\n      hex: '#f24541'\n    },\n    {\n      red: 0.9607843,\n      alpha: 1,\n      name: 'PastelRed',\n      blue: 0.4039216,\n      green: 0.4156863,\n      hex: '#f56a67'\n    },\n    {\n      red: 0.9803922,\n      alpha: 1,\n      name: 'Sundown',\n      blue: 0.7019608,\n      green: 0.7098039,\n      hex: '#fab5b3'\n    },\n    {\n      red: 0.9921569,\n      alpha: 1,\n      name: 'Pippin',\n      blue: 0.8823529,\n      green: 0.8823529,\n      hex: '#fde1e1'\n    }\n  ]\n];\nexport default function getC( arg1, arg2 ) {\n  let hue;\n  let shad;\n  if ( typeof arg1 === 'string' && arg2 === null ) {\n    for ( let v of PalleteArray ) {\n      for ( let c of v ) {\n        if ( c.name === arg1 ) return c;\n      }\n    }\n    throw new Error( \"can't find colour\" );\n  } else if ( typeof arg1 === 'number' && arg2 === null ) throw 'invalid';\n  if ( typeof arg1 === 'number' ) hue = arg1;\n  if ( typeof arg2 === 'number' ) shad = arg2;\n  if ( typeof arg1 === 'string' && arg2 !== null ) hue = hues[arg1];\n  if ( typeof arg2 === 'string' ) shad = shades[arg2];\n  try {\n    return PalleteArray[hue][shad];\n  } catch ( error ) {\n    throw error;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketch/pallete.js","\"use strict\";\nexports.__esModule = true;\nfunction add(a, b) {\n    return a + b;\n}\nexports[\"default\"] = add;\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketch/test.js","import * as d3 from 'd3';\nimport { hash } from './helperFuncs.js';\n/**\n *\n *\n * @export\n * @class VorManagement\n */\nexport default class VorManagement {\n  /**\n   *Creates an instance of VorManagement.\n   * @param {*} opts\n   * @memberof VorManagement\n   */\n  constructor( opts ) {\n    this.updatePolygons = () => {\n      this.relaxLikeLloyd();\n      this.regenerateMesh();\n      return this.outerPolys;\n    };\n    this.width = opts.width;\n    this.height = opts.height;\n    this.fillPC = opts.fillPC;\n    this.exisDA = opts.exisDA || undefined;\n    this.activePoints = [];\n    this.boundryPoints = [];\n    this.fillerPoints = [];\n    this.innerPolys = [];\n    this.outerPolys = [];\n    this.activeEdgeGroups = [];\n    this.fSim = d3.forceSimulation( this.activePoints );\n    this.fSim.alphaDecay( 0.1 );\n    this.fSim.alphaTarget( 0.3 );\n    this.fSim.velocityDecay( 0.6 );\n    this.fSim.force(\n      'repel',\n      d3\n        .forceManyBody()\n        .strength( -50 )\n        .distanceMax( 100 )\n    );\n    let fr = d3\n      .forceManyBody()\n      .strength( 50 )\n      .distanceMin( 30 );\n    this.fSim.force( 'charge', fr );\n    let xForce = d3\n      .forceX()\n      .x( function( d ) {\n        return d.cx;\n      } )\n      .strength( 0.1 );\n    this.fSim.force( 'xforce', xForce );\n    this.fSim.force(\n      'yforce',\n      d3\n        .forceY()\n        .y( d => d.cy )\n        .strength( 0.1 )\n    );\n    this.fSim.stop();\n    this.fSim.alphaTarget( 0.05 );\n    // Create begining graphs\n    this.innerMap = d3.voronoi().size( [this.width, this.height] );\n    this.outerMap = this.innerMap.extent( [\n      [-50, -50],\n      [this.width + 50, this.height + 50]\n    ] );\n    this.generateRandMesh();\n  }\n  /** Generates a seed random mesh */\n  generateRandMesh() {\n    let graph = this;\n    this.fillerPoints = d3.range( this.fillPC ).map( () => {\n      let point = {\n        0: Math.random() * graph.width,\n        1: Math.random() * graph.height,\n        class: 0,\n        filler: true\n      };\n      return point;\n    } );\n    this.boundryPoints = this.generateBoundryPoints(\n      this.width,\n      this.height,\n      20\n    );\n    this.activePoints = [];\n    this.regenerateMesh();\n  }\n  generateBoundryPoints( width, height, offset ) {\n    let output = [];\n    let xCount = Math.floor( width / offset );\n    d3.range( xCount + 2 ).map( i => {\n      output.push( {\n        0: i / xCount * width,\n        1: height + 50,\n        class: 1\n      } );\n    } );\n    d3.range( xCount + 2 ).map( i => {\n      output.push( {\n        0: i / xCount * width,\n        1: 0 - 50,\n        class: 1\n      } );\n    } );\n    let yCount = Math.floor( height / offset );\n    d3.range( yCount + 2 ).map( i => {\n      output.push( {\n        0: width + 50,\n        1: i / yCount * height,\n        class: 1\n      } );\n    } );\n    d3.range( yCount + 2 ).map( i => {\n      output.push( {\n        0: 0 - 50,\n        1: i / yCount * height,\n        class: 1\n      } );\n    } );\n    return output;\n  }\n  getActiveEdges() {\n    this.activeEdgeGroups = [];\n    let aEdges = [];\n    if ( this.activePoints.length <= 1 ) return;\n    this.outerMesh.edges.map( edge => {\n      if ( !edge.left || !edge.right ) return;\n\n      let leftIs = this.activePoints.includes( edge.left.data );\n      let rightIs = this.activePoints.includes( edge.right.data );\n      if ( leftIs ? !rightIs : rightIs ) {\n        if ( !aEdges.includes( edge[0] ) ) {\n          aEdges.push( edge[0] );\n          edge[0].n = [];\n          edge[0].n.push( edge[1] );\n        } else if ( !edge[0].n.includes( edge[1] ) ) edge[0].n.push( edge[1] );\n        if ( !aEdges.includes( edge[1] ) ) {\n          aEdges.push( edge[1] );\n          edge[1].n = [];\n          edge[1].n.push( edge[0] );\n        } else if ( !edge[1].n.includes( edge[0] ) ) edge[1].n.push( edge[0] );\n      }\n    } );\n    let fakeOutCount = 0;\n    while ( aEdges.length > 1 && fakeOutCount < 12 ) {\n      let outputGroup = [];\n      let sortP = ( point, out ) => {\n        out.push( point );\n        if ( !out.includes( point.n[0] ) ) sortP( point.n[0], out );\n        if ( !out.includes( point.n[1] ) ) sortP( point.n[1], out );\n      };\n      sortP( aEdges[0], outputGroup );\n      this.activeEdgeGroups.push( outputGroup );\n      outputGroup.map( point => {\n        aEdges.splice( aEdges.indexOf( point ), 1 );\n      } );\n      fakeOutCount++;\n    }\n    console.log( this.activeEdgeGroups );\n  }\n  regenerateMesh() {\n    // @ts-ignore\n    this.innerMesh = this.innerMap( this.activePoints.concat( this.fillerPoints ) );\n    this.outerMesh = this.outerMap(\n      // @ts-ignore\n      this.activePoints.concat( this.fillerPoints, this.boundryPoints )\n    );\n    this.innerPolys = this.innerMesh.polygons();\n    this.outerPolys = this.outerMesh.polygons();\n    this.getActiveEdges();\n  }\n  relaxLikeLloyd() {\n    this.activePoints.map( ( p, i ) => {\n      let centroid = d3.polygonCentroid( this.innerPolys[i] );\n      p.cx = centroid[0];\n      p.cy = centroid[1];\n      p[0] = ( p[0] + p.x ) / 2;\n      p[1] = ( p[1] + p.y ) / 2;\n    } );\n    this.fillerPoints.map( ( p, i ) => {\n      let centroid = d3.polygonCentroid(\n        this.innerPolys[i + this.activePoints.length]\n      );\n      p[0] = centroid[0];\n      p[1] = centroid[1];\n    } );\n  }\n  addActivePoint( x, y, cl, dat ) {\n    this.activePoints.push( {\n      0: x,\n      1: y,\n      class: cl,\n      x: x,\n      y: y,\n      cx: x,\n      cy: y,\n      id: hash( Math.random() * 100 )\n    } );\n    this.fSim.nodes( this.activePoints );\n    this.getActiveEdges();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketch/vorManagement.js"],"sourceRoot":""}